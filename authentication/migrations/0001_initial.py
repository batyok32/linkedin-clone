# Generated by Django 3.2.8 on 2021-11-18 11:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('type', models.CharField(choices=[('FREELANCER', 'Freelancer'), ('COMPANY', 'Company'), ('ADMIN', 'Admin')], default='FREELANCER', max_length=50, verbose_name='Type')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Username for Login')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Joined date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name of Profession')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Profession',
                'verbose_name_plural': 'Professions',
            },
        ),
        migrations.CreateModel(
            name='FreelancerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('experience', models.TextField(verbose_name='Work experience')),
                ('knowledge', models.TextField(verbose_name='Degree / University / What do you know')),
                ('city', models.CharField(choices=[('Ag', 'Ashgabat'), ('Ah', 'Ahal'), ('Bl', 'Balkan'), ('Mr', 'Mary'), ('Dz', 'Dasoguz'), ('Lb', 'Lebap')], default='Ag', max_length=50, verbose_name='Living City')),
                ('projects', models.TextField(verbose_name='Which projects you did')),
                ('phone_number', models.BigIntegerField(verbose_name='Contact phone number')),
                ('birth_date', models.DateField()),
                ('min_price', models.PositiveIntegerField(verbose_name='Minimum cost of project')),
                ('max_price', models.PositiveIntegerField(verbose_name='Maximum cost of project')),
                ('logo', imagekit.models.fields.ProcessedImageField(default='default.jpg', upload_to='freelancers/')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='freelancer', to='authentication.profession')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='freelancer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', imagekit.models.fields.ProcessedImageField(default='default.jpg', upload_to='companies/')),
                ('full_name', models.CharField(max_length=255, unique=True, verbose_name='Full Name')),
                ('description', models.TextField(verbose_name='Comapany Information')),
                ('address', models.CharField(max_length=255, verbose_name='Address of Company')),
                ('found_date', models.DateField(verbose_name='Date of Foundation of Company')),
                ('company_type', models.CharField(choices=[('OHH', 'Hojalyk Jemgyýeti'), ('IP', 'Telekeçi')], max_length=50, verbose_name='Type Of Company')),
                ('phone_number', models.BigIntegerField(verbose_name='Contact phone number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('authentication.user',),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('authentication.user',),
        ),
        migrations.CreateModel(
            name='Freelancer',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('authentication.user',),
        ),
    ]
