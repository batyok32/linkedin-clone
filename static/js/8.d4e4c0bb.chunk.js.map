{"version":3,"sources":["components/Register/Form/RegisterDropSelect.jsx","containers/PostJob.jsx","redux/actions/main.js","components/Register/SubmitButton/index.jsx","components/Validate/formValidate.jsx","components/Validate/isEmpty.jsx","components/Register/Form/SelectInput.jsx","components/Register/Form/TextAreaInput.jsx","components/Register/Form/TextInput.jsx"],"names":["RegisterDropSelect","name","full_name","icon","clickFun","optionsFun","defaultOpt","resetFun","useState","choosedItem","setChoosedItem","isLoading","setIsLoading","opts","setOptions","searchValue","setSearchValue","sawDefaultOpt","setSawDefaultOpt","useEffect","length","style","color","marginBottom","className","htmlFor","class","role","borderRadius","outline","boxShadow","width","background","type","placeholder","value","onChange","e","target","required","overflowY","maxHeight","onClick","fontWeight","Array","isArray","map","option","PostJob","profession","city","min_salary","max_salary","after_meeting","min_experience","max_experience","work_time","skills","description","jobData","setJobData","formErrors","setFormErrors","startedWriting","setStartedWriting","dispatch","useDispatch","user","useSelector","state","auth","history","useHistory","inputChange","numberInputChange","Number","validateJobPost","response","search_professions","then","res","opt","push","id","options","checked","for","max_length","min_length","disabled","isEmpty","submitFunction","preventDefault","post_job","status","load_jobs","conf","oldJobs","a","axios","get","process","config","LOAD_MORE_JOBS","old_jobs","new_jobs","data","results","next","prev","count","LOAD_JOBS","payload","load_freelancers","oldData","console","log","LOAD_MORE_FREELANCERS","old_data","new_data","LOAD_FREELANCERS","get_profession","search_company","search_freelancer","load_job","pk","localStorage","getItem","body","JSON","stringify","authConfig","headers","Authorization","Accept","post","retrieve_freelancer","SubmitButton","validateRegisterInfo","values","errors","username","trim","usernameError","password","passwordError","password2","password2passwordError","password2Error","validateRegisterCompanyProfile","fullName","companyName","compInfo","address","phone_number","phoneNumber2","phoneNumber","image","raw","validateRegisterFreelanacerProfile","freelancerName","experience","freelancerinput","knowledge","projects","profesion","professionchoose","freelancermaxcost","freelancercost","notcorrectfield","hasOwnProperty","Object","prototype","obj","key","call","SelectInput","TextAreaInput","TextInput","max","min"],"mappings":"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","file":"static/js/8.d4e4c0bb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction RegisterDropSelect({\n    name,\n    full_name,\n    icon,\n    clickFun,\n    optionsFun,\n    defaultOpt,\n    resetFun,\n}) {\n    const [choosedItem, setChoosedItem] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [opts, setOptions] = useState([]);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [sawDefaultOpt, setSawDefaultOpt] = useState(false);\n\n    useEffect(() => {\n        if (searchValue.length >= 2) {\n            setIsLoading(true);\n            optionsFun(searchValue, setOptions, setIsLoading);\n        }\n    }, [searchValue]);\n    useEffect(() => {\n        // Used for starting if it has default value\n        if (defaultOpt && !sawDefaultOpt) {\n            defaultOpt(setChoosedItem);\n            setSawDefaultOpt(true);\n        }\n    }, [defaultOpt]);\n    return (\n        <div\n            style={{ color: \"rgb(51, 51, 51)\", marginBottom: \"2rem\" }}\n            className=\"dropdown position-relative\"\n        >\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <button\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n                style={{\n                    borderRadius: \"7px\",\n                    outline: \"none\",\n                    boxShadow: \"none\",\n                }}\n                className=\"w-100 btn px-3 d-flex justify-content-between align-items-center border dropdown-toggle truncate-overflow-1\"\n            >\n                {choosedItem?.name ? choosedItem.name : full_name}\n                <i class=\"ms-2 bi bi-chevron-down fs-14\"></i>\n            </button>\n            <ul\n                class=\"dropdown-menu mt-1 p-0 \"\n                style={{ borderRadius: \"10px\", width: \"90%\" }}\n            >\n                <div\n                    className=\"my-3 mx-auto d-flex px-2 align-items-center\"\n                    style={{\n                        borderRadius: \"10px\",\n                        width: \"90%\",\n                        background: \"rgba(202,204,206, 0.4)\",\n                    }}\n                >\n                    <i class=\"bi bi-search text-muted\"></i>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Поиск...\"\n                        value={searchValue}\n                        onChange={(e) => setSearchValue(e.target.value)}\n                        className=\"form-control border-0  bg-transparent sm-placeholder\"\n                        style={{\n                            outline: \"none\",\n                            boxShadow: \"none\",\n                        }}\n                        required\n                    />\n                </div>\n                {isLoading && (\n                    <div className=\"text-center my-2 text-primary\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    style={{\n                        overflowY: \"scroll\",\n                        maxHeight: \"150px\",\n                    }}\n                >\n                    {choosedItem ? (\n                        <div className=\"px-2\">\n                            <div\n                                onClick={() => {\n                                    setChoosedItem(null);\n                                    resetFun();\n                                }}\n                                role=\"button\"\n                                style={{\n                                    borderRadius: \"10px\",\n                                    fontWeight: \"normal\",\n                                }}\n                                className=\"dropdown-item truncate-overflow-1 blue-btn justify-content-between align-items-center my-2 py-2 d-flex\"\n                            >\n                                <span>{choosedItem.name}</span>\n                                <i class=\"bi bi-x-lg\"></i>\n                            </div>\n                        </div>\n                    ) : (\n                        \"\"\n                    )}\n                    {Array.isArray(opts) &&\n                        opts.length > 0 &&\n                        opts.map((option) => {\n                            return (\n                                <div\n                                    onClick={() => {\n                                        setChoosedItem({ name: option.name });\n                                        clickFun(option.value);\n                                    }}\n                                    role=\"button\"\n                                    className=\"dropdown-item py-2\"\n                                >\n                                    {option.name}\n                                </div>\n                            );\n                        })}\n                </div>\n            </ul>\n        </div>\n    );\n}\n\nexport default RegisterDropSelect;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegisterDropSelect from \"../components/Register/Form/RegisterDropSelect\";\nimport SelectInput from \"../components/Register/Form/SelectInput\";\nimport TextAreaInput from \"../components/Register/Form/TextAreaInput\";\nimport TextInput from \"../components/Register/Form/TextInput\";\nimport SubmitButton from \"../components/Register/SubmitButton\";\nimport { validateJobPost } from \"../components/Validate/formValidate\";\nimport isEmpty from \"../components/Validate/isEmpty\";\nimport { post_job, search_professions } from \"../redux/actions/main\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction PostJob() {\n    const [jobData, setJobData] = useState({\n        name: \"\",\n        profession: null,\n        city: \"Ag\",\n        min_salary: 0,\n        max_salary: 0,\n        after_meeting: false,\n        min_experience: 0,\n        max_experience: 0,\n        work_time: 0,\n        skills: \"\",\n        description: \"\",\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [formErrors, setFormErrors] = useState(null);\n    const [startedWriting, setStartedWriting] = useState({\n        name: null,\n        min_salary: null,\n        max_salary: null,\n        min_experience: null,\n        max_experience: null,\n        work_time: null,\n        skills: null,\n        description: null,\n    });\n    // REDUX\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.auth.user);\n    const history = useHistory();\n\n    // INPUT\n    const inputChange = (e) =>\n        setJobData({ ...jobData, [e.target.name]: e.target.value });\n    const numberInputChange = (e) =>\n        setJobData({ ...jobData, [e.target.name]: Number(e.target.value) });\n    useEffect(() => {\n        setFormErrors(validateJobPost(jobData));\n        return () => {\n            setFormErrors(null);\n        };\n    }, [jobData, startedWriting]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormErrors(validateJobPost(jobData));\n        setStartedWriting({\n            name: true,\n            min_salary: true,\n            max_salary: true,\n            min_experience: true,\n            max_experience: true,\n            work_time: true,\n            skills: true,\n            description: true,\n        });\n        if (isEmpty(formErrors)) {\n            dispatch(post_job(jobData, user)).then((res) => {\n                setIsLoading(false);\n                if (res.status === 201) {\n                    history.push(\"/jobs\");\n                }\n            });\n        }\n    };\n    return (\n        <div className=\"container\">\n            <div className=\"h1 text-center my-5\">Работа</div>\n            <div\n                className=\"mx-auto bg-white col-12 p-4 col-md-8 col-lg-6\"\n                style={{ borderRadius: \"10px\" }}\n            >\n                <TextInput\n                    name=\"name\"\n                    full_name=\"Полное имя работы\"\n                    icon=\"bi-card-text\"\n                    placeholder=\"Менеджер по продаже телефонов\"\n                    value={jobData.name}\n                    startedWriting={startedWriting}\n                    setStartedWriting={setStartedWriting}\n                    inputChange={inputChange}\n                    formErrors={formErrors}\n                />\n                <RegisterDropSelect\n                    name=\"profession\"\n                    full_name=\"Какая профессия\"\n                    icon=\"bi-people-fill\"\n                    clickFun={(value) =>\n                        setJobData({ ...jobData, profession: value })\n                    }\n                    optionsFun={(value, setOptions, setIsLoading) => {\n                        let response = [];\n                        dispatch(search_professions(value)).then((res) => {\n                            if (Array.isArray(res) && res.length > 0) {\n                                res.map((opt) =>\n                                    response.push({\n                                        name: opt.name,\n                                        value: opt.id,\n                                    })\n                                );\n                            }\n                            setOptions(response);\n                            setIsLoading(false);\n                        });\n                    }}\n                />\n                <SelectInput\n                    name=\"city\"\n                    full_name=\"Где будет работа\"\n                    icon=\"bi-compass-fill\"\n                    value={jobData.city}\n                    inputChange={inputChange}\n                    options={[\n                        {\n                            value: \"Ag\",\n                            name: \"Ашхабад\",\n                        },\n                        {\n                            value: \"Ah\",\n                            name: \"Ахал\",\n                        },\n                        {\n                            value: \"Bl\",\n                            name: \"Балканы\",\n                        },\n                        {\n                            value: \"Mr\",\n                            name: \"Мары\",\n                        },\n                        {\n                            value: \"Dz\",\n                            name: \"Дашогуз\",\n                        },\n                        {\n                            value: \"Lb\",\n                            name: \"Лебап\",\n                        },\n                    ]}\n                />\n                <h3 className=\"my-5 text-center\">Зарплата</h3>\n                <div class=\"form-check\" style={{ marginBottom: \"2rem\" }}>\n                    <input\n                        class=\"form-check-input \"\n                        type=\"checkbox\"\n                        onChange={(e) =>\n                            setJobData({\n                                ...jobData,\n                                after_meeting: !jobData?.after_meeting,\n                            })\n                        }\n                        value={jobData?.after_meeting}\n                        checked={jobData?.after_meeting}\n                        id=\"flexCheckDefault\"\n                    />\n                    <label\n                        class=\"form-check-label user-select-none\"\n                        for=\"flexCheckDefault\"\n                    >\n                        Зарплата после собеседования\n                    </label>\n                </div>\n                {!jobData?.after_meeting && (\n                    <>\n                        <TextInput\n                            name=\"min_salary\"\n                            full_name=\"Минимальная зарплата\"\n                            icon=\"bi-coin\"\n                            value={jobData.min_salary}\n                            type=\"number\"\n                            startedWriting={startedWriting}\n                            setStartedWriting={setStartedWriting}\n                            inputChange={numberInputChange}\n                            formErrors={formErrors}\n                        />\n                        <TextInput\n                            name=\"max_salary\"\n                            full_name=\"Максимальная зарплата\"\n                            icon=\"bi-cash-coin\"\n                            value={jobData.max_salary}\n                            type=\"number\"\n                            startedWriting={startedWriting}\n                            setStartedWriting={setStartedWriting}\n                            inputChange={numberInputChange}\n                            formErrors={formErrors}\n                        />\n                    </>\n                )}\n\n                <h3 className=\"my-5 text-center\">Дополнительно</h3>\n                <TextInput\n                    name=\"min_experience\"\n                    full_name=\"Минимальный опыт работы\"\n                    icon=\"bi-bar-chart\"\n                    value={jobData.min_experience}\n                    type=\"number\"\n                    startedWriting={startedWriting}\n                    setStartedWriting={setStartedWriting}\n                    inputChange={numberInputChange}\n                    formErrors={formErrors}\n                />\n                <TextInput\n                    name=\"max_experience\"\n                    full_name=\"Максимальный опыт работы\"\n                    icon=\"bi-bar-chart-fill\"\n                    value={jobData.max_experience}\n                    type=\"number\"\n                    startedWriting={startedWriting}\n                    setStartedWriting={setStartedWriting}\n                    inputChange={numberInputChange}\n                    formErrors={formErrors}\n                />\n                <TextInput\n                    name=\"work_time\"\n                    full_name=\"Часы работы\"\n                    icon=\"bi-clock-fill\"\n                    value={jobData.work_time}\n                    type=\"number\"\n                    startedWriting={startedWriting}\n                    setStartedWriting={setStartedWriting}\n                    inputChange={numberInputChange}\n                    formErrors={formErrors}\n                    max_length={24}\n                    min_length={0}\n                />\n                <TextAreaInput\n                    name=\"skills\"\n                    full_name=\"Какие качества, знания, скилы должен работник знать\"\n                    icon=\"bi-file-earmark-text\"\n                    placeholder={`Что вы можете рассказать о своей практике? \\nВ каких проектах участовали?`}\n                    value={jobData?.skills}\n                    startedWriting={startedWriting}\n                    setStartedWriting={setStartedWriting}\n                    inputChange={inputChange}\n                    formErrors={formErrors}\n                />\n                <TextAreaInput\n                    name=\"description\"\n                    full_name=\"Что вы можете рассказать о работе\"\n                    icon=\"bi-file-earmark-medical-fill\"\n                    placeholder={`Что вы можете рассказать о своей практике? \\nВ каких проектах участовали?`}\n                    value={jobData?.description}\n                    startedWriting={startedWriting}\n                    setStartedWriting={setStartedWriting}\n                    inputChange={inputChange}\n                    formErrors={formErrors}\n                />\n                <SubmitButton\n                    disabled={!isEmpty(formErrors)}\n                    submitFunction={submitHandler}\n                    isLoading={isLoading}\n                    name={\"Запостить\"}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default PostJob;\n","import {\n    LOAD_JOBS,\n    LOAD_MORE_JOBS,\n    LOAD_FREELANCERS,\n    LOAD_MORE_FREELANCERS,\n} from \"../types/types\";\n\nimport errors from \"./../messages/errors.json\";\nimport success from \"./../messages/success.json\";\nimport axios from \"axios\";\nimport { authConfig, config } from \"../utils/config\";\n\nexport const load_jobs = (conf, oldJobs) => async (dispatch) => {\n    // console.log(\"Loading jobs\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/jobs/?${conf}`,\n            config\n        );\n        if (Array.isArray(oldJobs)) {\n            dispatch({\n                type: LOAD_MORE_JOBS,\n                old_jobs: oldJobs,\n                new_jobs: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        } else {\n            dispatch({\n                type: LOAD_JOBS,\n                payload: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        }\n\n        return res.data.results;\n    } catch (error) {\n        return;\n        // console.log(\"Not authenticated\");\n    }\n};\nexport const load_freelancers = (conf, oldData) => async (dispatch) => {\n    console.log(\"Loading freelancers\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/freelancer/?${conf}`,\n            config\n        );\n        if (Array.isArray(oldData)) {\n            dispatch({\n                type: LOAD_MORE_FREELANCERS,\n                old_data: oldData,\n                new_data: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        } else {\n            dispatch({\n                type: LOAD_FREELANCERS,\n                payload: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        }\n\n        return res.data.results;\n    } catch (error) {\n        return error;\n        // console.log(\"Not authenticated\");\n    }\n};\n\nexport const get_profession = (id) => async (dispatch) => {\n    console.log(\"Loading profession\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/professions/${id}/`,\n            config\n        );\n\n        return res.data;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\n\nexport const search_professions = (searchValue) => async (dispatch) => {\n    console.log(\"Searching professions\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/professions/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\nexport const search_company = (searchValue) => async (dispatch) => {\n    console.log(\"Searching companies\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/search/company/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\nexport const search_freelancer = (searchValue) => async (dispatch) => {\n    console.log(\"Searching freelancers\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/search/freelancer/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\n\nexport const load_job = (pk) => async (dispatch) => {\n    console.log(\"Loading job\", pk);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/jobs/${pk}/`,\n            config\n        );\n        return res.data;\n    } catch (error) {\n        // console.log(\"Not authenticated\");\n    }\n};\nexport const post_job = (jobData, user) => async (dispatch) => {\n    console.log(\"Post job\", jobData, user);\n    if (localStorage.getItem(\"access\")) {\n        const body = JSON.stringify({\n            name: jobData.name,\n            profession: jobData.profession,\n            city: jobData.city,\n            min_salary: jobData.min_salary,\n            max_salary: jobData.max_salary,\n            after_meeting: jobData.after_meeting,\n            min_experience: jobData.min_experience,\n            max_experience: jobData.max_experience,\n            work_time: jobData.work_time,\n            skills: jobData.skills,\n            description: jobData.description,\n        });\n        const authConfig = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n                Accept: \"application/json\",\n            },\n        };\n        try {\n            const res = await axios.post(\n                `${process.env.REACT_APP_API_VERSION_URL}/jobs/`,\n                body,\n                authConfig\n            );\n            console.log(\"Sended\", res.data);\n            return res;\n        } catch (error) {\n            return error;\n        }\n    } else {\n        console.log(\"No access token\");\n    }\n};\n\nexport const retrieve_freelancer = (pk) => async (dispatch) => {\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/freelancer/${pk}/`,\n            config\n        );\n        return res.data;\n        // console.log.log(\"LOADED FREELANCER: \", res);\n    } catch (error) {\n        // console.log(\"Not authenticated\");\n    }\n};\n","import React from \"react\";\n\nfunction SubmitButton({\n    disabled,\n    name = \"Зарегистрироваться\",\n    isLoading,\n    submitFunction,\n}) {\n    return (\n        <button\n            type=\"button\"\n            disabled={disabled}\n            onClick={(e) => submitFunction(e)}\n            className=\"btn blue-btn my-2 text-center w-100 \"\n        >\n            {isLoading ? (\n                <div className=\"spinner-border text-white\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            ) : (\n                <>{name}</>\n            )}\n        </button>\n    );\n}\n\nexport default SubmitButton;\n","import formErrors from \"../../redux/messages/formErrors.json\";\n\nexport function validateRegisterInfo(values) {\n    let errors = {};\n    if (!values.username.trim()) {\n        errors.username = formErrors.usernameError;\n    }\n\n    if (!values.password.trim()) {\n        errors.password = formErrors.passwordError;\n    }\n    if (values.password !== values?.password2) {\n        errors.password2 = formErrors.password2passwordError;\n    }\n    if (!values.password2.trim()) {\n        errors.password2 = formErrors.password2Error;\n    }\n\n    return errors;\n}\n\n// Сompany Signup\nexport function validateRegisterCompanyProfile(values) {\n    let errors = {};\n    // console.log(\"Validating\", values);\n\n    if (!values?.fullName?.trim()) {\n        errors.fullName = formErrors.companyName;\n    }\n\n    if (!values?.compInfo?.trim()) {\n        errors.compInfo = formErrors.usernameError;\n    }\n\n    if (!values?.address?.trim()) {\n        errors.address = formErrors.usernameError;\n    }\n\n    if (values?.phone_number) {\n        if (\n            (values?.phone_number >= 99361000000 &&\n                values?.phone_number <= 99365999999) ||\n            (values?.phone_number >= 99312000000 &&\n                values.phone_number <= 99312999999)\n        ) {\n            // pass\n        } else {\n            errors.phone_number = formErrors.phoneNumber2;\n        }\n    } else {\n        errors.phone_number = formErrors.phoneNumber;\n    }\n\n    if (!values.image.raw) {\n        errors.image = \"\";\n    }\n\n    return errors;\n}\n\n// Freelancer Signup\nexport function validateRegisterFreelanacerProfile(values) {\n    let errors = {};\n    // console.log(\"Validating\", values);\n\n    if (!values?.fullName.trim()) {\n        errors.fullName = formErrors.freelancerName;\n    }\n\n    if (!values.experience.trim()) {\n        errors.experience = formErrors.freelancerinput;\n    }\n    if (!values.knowledge.trim()) {\n        errors.knowledge = formErrors.freelancerinput;\n    }\n    if (!values.projects.trim()) {\n        errors.projects = formErrors.freelancerinput;\n    }\n    if (!values.profesion) {\n        errors.profession = formErrors.professionchoose;\n    }\n\n    if (values.phone_number) {\n        if (\n            (values?.phone_number >= 99361000000 &&\n                values?.phone_number <= 99365999999) ||\n            (values?.phone_number >= 99312000000 &&\n                values.phone_number <= 99312999999)\n        ) {\n            // pass\n        } else {\n            errors.phone_number = formErrors.phoneNumber2;\n        }\n    } else {\n        errors.phone_number = formErrors.phoneNumber;\n    }\n\n    if (!values.image.raw) {\n        errors.image = \"Error\";\n    }\n\n    return errors;\n}\n\n// Job Post\nexport function validateJobPost(values) {\n    let errors = {};\n    console.log(\"Validating\", values);\n\n    // NAME\n    if (!values.name.trim()) {\n        errors.name = formErrors.freelancerinput;\n    }\n    // PROFESSION\n    if (!values.profession) {\n        errors.compInfo = formErrors.professionchoose;\n    }\n\n    // SALARY\n    if (values.after_meeting) {\n        // pass\n    } else {\n        if (values.min_salary >= values.max_salary) {\n            errors.max_salary = formErrors.freelancermaxcost;\n        }\n\n        if (values.min_salary < 0) {\n            errors.min_salary = formErrors.freelancercost;\n        }\n        if (values.max_salary < 0) {\n            errors.max_salary = formErrors.freelancercost;\n        }\n    }\n    // EXPERIENCE\n    if (values.min_experience >= values.max_experience) {\n        errors.max_experience = formErrors.freelancermaxcost;\n    }\n\n    if (values.min_experience < 0) {\n        errors.min_experience = formErrors.freelancercost;\n    }\n    if (values.max_experience < 0) {\n        errors.max_experience = formErrors.freelancercost;\n    }\n\n    // WORK TIME\n    if (values.work_time <= 0 || values.work_time > 24) {\n        errors.work_time = formErrors.notcorrectfield;\n    }\n\n    // SKILLS\n    if (!values.skills.trim()) {\n        errors.skills = formErrors.freelancerinput;\n    }\n    // DESCRIPTION\n    if (!values.description.trim()) {\n        errors.description = formErrors.freelancerinput;\n    }\n\n    return errors;\n}\n","// Speed up calls to hasOwnProperty\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default function isEmpty(obj) {\n\t// null and undefined are \"empty\"\n\tif (obj == null) return true;\n\n\t// Assume if it has a length property with a non-zero value\n\t// that that property is correct.\n\tif (obj.length > 0) return false;\n\tif (obj.length === 0) return true;\n\n\t// If it isn't an object at this point\n\t// it is empty, but it can't be anything *but* empty\n\t// Is it empty?  Depends on your application.\n\tif (typeof obj !== \"object\") return true;\n\n\t// Otherwise, does it have any properties of its own?\n\t// Note that this doesn't handle\n\t// toString and valueOf enumeration bugs in IE < 9\n\tfor (var key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) return false;\n\t}\n\n\treturn true;\n}\n","import React from \"react\";\n\nfunction SelectInput({ name, full_name, icon, value, inputChange, options }) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <select\n                onChange={(e) => {\n                    inputChange(e);\n                }}\n                className=\"form-select\"\n                name={name}\n                role=\"button\"\n                required\n                id={name}\n                value={value}\n                style={{ borderRadius: \"7px\" }}\n                aria-label=\"Default select example\"\n            >\n                {Array.isArray(options) &&\n                    options.map((option) => (\n                        <option value={option.value}>{option.name}</option>\n                    ))}\n            </select>\n        </div>\n    );\n}\n\nexport default SelectInput;\n","import React from \"react\";\n\nfunction TextAreaInput({\n    name,\n    full_name,\n    icon,\n    placeholder,\n    value,\n    startedWriting,\n    setStartedWriting,\n    inputChange,\n    formErrors,\n}) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <textarea\n                name={name}\n                id={name}\n                placeholder={placeholder && placeholder}\n                value={value}\n                onChange={(e) => {\n                    inputChange(e);\n                    setStartedWriting({\n                        ...startedWriting,\n                        [name]: true,\n                    });\n                }}\n                className={`form-control sm-placeholder ${\n                    startedWriting?.[name] === true &&\n                    (formErrors?.[name] ? \"is-invalid\" : \"is-valid\")\n                }`}\n                style={{ borderRadius: \"7px\" }}\n                aria-describedby={name}\n                required\n            ></textarea>\n            <div class=\"invalid-feedback\">{formErrors?.[name]}</div>\n        </div>\n    );\n}\n\nexport default TextAreaInput;\n","import React from \"react\";\n\nfunction TextInput({\n    name,\n    full_name,\n    icon,\n    placeholder,\n    disabled,\n    value,\n    type = \"text\",\n    startedWriting,\n    setStartedWriting,\n    inputChange,\n    formErrors,\n    max_length,\n    min_length,\n}) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <input\n                type={type}\n                name={name}\n                id={name}\n                disabled={disabled && disabled}\n                placeholder={placeholder && placeholder}\n                value={value}\n                onChange={(e) => {\n                    inputChange(e);\n                    setStartedWriting({\n                        ...startedWriting,\n                        [name]: true,\n                    });\n                }}\n                className={`form-control sm-placeholder ${\n                    startedWriting?.[name] === true &&\n                    (formErrors?.[name] ? \"is-invalid\" : \"is-valid\")\n                }`}\n                style={{ borderRadius: \"7px\" }}\n                aria-describedby={name}\n                max={max_length && max_length}\n                min={min_length && min_length}\n                required\n            />\n            <div class=\"invalid-feedback\">{formErrors?.[name]}</div>\n        </div>\n    );\n}\n\nexport default TextInput;\n"],"sourceRoot":""}