{"version":3,"sources":["components/Register/Form/CalendarInput.jsx","components/Register/Form/ImageInput.jsx","components/Register/CompanyProfile/index.jsx","components/Register/FreelancerProfile.jsx","components/Register/Form/index.jsx","containers/SignUp.jsx"],"names":["CalendarInput","name","full_name","icon","calendarDate","handleSelect","style","marginBottom","htmlFor","className","fontSize","class","locale","ru","maxDate","Date","date","onChange","ImageInput","image","handleChangeImage","role","preview","src","alt","width","borderRadius","height","type","id","required","CompanyProfile","userData","useState","setCalendarDate","fullName","compInfo","address","companyType","phone_number","raw","choosedDate","convertDate","profileData","setProfileData","isLoading","setIsLoading","formErrors","setFormErrors","startedWriting","setStartedWriting","dispatch","useDispatch","inputChange","e","target","value","useEffect","validateRegisterCompanyProfile","TextInput","placeholder","TextAreaInput","files","length","URL","createObjectURL","SelectInput","options","SubmitButton","disabled","isEmpty","submitFunction","preventDefault","check_company","then","res","signUpCompany","FreelancerProfile","experience","knowledge","profesion","city","projects","birthDate","validateRegisterFreelanacerProfile","citiesArray","profession","RegisterDropSelect","clickFun","optionsFun","setOptions","response","search_professions","Array","isArray","map","opt","push","signUpFreelancer","console","log","Form","formData","setFormData","setLoadProfile","username","password","password2","userType","validateRegisterInfo","check_user","SignUp","loadProfile","to","fontWeight","ShortFooter"],"mappings":"uTA6BeA,MAvBf,YAA+E,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC1D,OACI,sBAAKC,MAAO,CAAEC,aAAc,QAA5B,UACI,wBACIC,QAASP,EACTQ,UAAU,mEACVH,MAAO,CAAEI,SAAU,QAHvB,UAKI,mBAAGC,MAAK,aAAQR,EAAR,gBACPD,KAEL,qBAAKO,UAAU,gCAAf,SACI,cAAC,WAAD,CACIG,OAAQC,IACRC,QAAS,IAAIC,KACbC,KAAMZ,EACNa,SAAUZ,U,QCkBfa,MAtCf,YAA0E,IAApDjB,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,KAAMgB,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,kBAChD,OACI,sBAAKd,MAAO,CAAEC,aAAc,QAA5B,UACI,wBACIC,QAASP,EACToB,KAAK,SACLZ,UAAU,0EACVH,MAAO,CAAEI,SAAU,QAJvB,UAMI,sBAAKD,UAAU,mCAAf,UACI,mBAAGE,MAAK,aAAQR,EAAR,gBACPD,EACD,mBAAGS,MAAM,0CAEP,OAALQ,QAAK,IAALA,OAAA,EAAAA,EAAOG,UACJ,qBAAKb,UAAU,mDAAf,SACI,qBACIc,IAAG,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAOG,QACZE,IAAI,QACJC,MAAM,MACNhB,UAAU,OACVH,MAAO,CAAEoB,aAAc,QACvBC,OAAO,aAKvB,uBACIC,KAAK,OACLnB,UAAU,SACVoB,GAAI5B,EACJgB,SAAUG,EACVU,UAAQ,Q,QCoJTC,MAzKf,YAAuC,IAAbC,EAAY,EAAZA,SACtB,EAAwCC,mBAAS,IAAIlB,MAArD,mBAAOX,EAAP,KAAqB8B,EAArB,KACA,EAAsCD,mBAAS,CAC3CE,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,YAAa,MACbC,aAAc,MACdpB,MAAO,CAAEG,QAAS,GAAIkB,IAAK,IAC3BC,YAAaC,YAAY,IAAI3B,QAPjC,mBAAO4B,EAAP,KAAoBC,EAApB,KASA,EAAkCX,oBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAAoCb,mBAAS,MAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,EAA4Cf,mBAAS,CACjDE,SAAU,KACVC,SAAU,KACVC,QAAS,KACTE,aAAc,OAJlB,mBAAOU,EAAP,KAAuBC,EAAvB,KAMMC,EAAWC,cACTjB,EACJQ,EADIR,SAAUE,EACdM,EADcN,QAASD,EACvBO,EADuBP,SAAUE,EACjCK,EADiCL,YAAaC,EAC9CI,EAD8CJ,aAAcpB,EAC5DwB,EAD4DxB,MAE1DkC,EAAc,SAACC,GAAD,OAChBV,EAAe,2BAAKD,GAAN,kBAAoBW,EAAEC,OAAOtD,KAAOqD,EAAEC,OAAOC,UAyD/D,OAxCAC,qBAAU,WAEN,OADAT,EAAcU,YAA+Bf,IACtC,WACHK,EAAc,SAEnB,CAACL,EAAaM,IAoCb,sBAAKxC,UAAU,QAAf,UACI,cAACkD,EAAA,EAAD,CACI1D,KAAK,WACLC,UAAU,2GACVC,KAAK,cACLyD,YAAY,iBACZJ,MAAOrB,EACPc,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAEhB,cAACc,EAAA,EAAD,CACI5D,KAAK,WACLC,UAAU,uHACVC,KAAK,uBACLyD,YAAW,mRACXJ,MAAOpB,EACPa,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAEhB,cAACY,EAAA,EAAD,CACI1D,KAAK,UACLC,UAAU,wFACVC,KAAK,kBACLyD,YAAY,mEACZJ,MAAOnB,EACPY,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAEhB,cAACY,EAAA,EAAD,CACI1D,KAAK,eACLC,UAAU,+IACVC,KAAK,oBACLyD,YAAY,cACZJ,MAAOjB,EACPX,KAAK,SACLqB,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAGhB,cAAC,EAAD,CACI9C,KAAK,WACLC,UAAU,mIACVC,KAAK,eACLC,aAAcA,EACdC,aA5GS,SAACW,GAClBkB,EAAgBlB,GAChB4B,EAAe,2BAAKD,GAAN,IAAmBF,YAAaC,YAAY1B,SA4GtD,cAAC,EAAD,CACIf,KAAK,gBACLC,UAAU,4HACVC,KAAK,WACLgB,MAAOA,EACPC,kBA/Gc,SAACkC,GACnBA,EAAEC,OAAOO,MAAMC,QACfnB,EAAe,2BACRD,GADO,IAEVxB,MAAO,CACHG,QAAS0C,IAAIC,gBAAgBX,EAAEC,OAAOO,MAAM,IAC5CtB,IAAKc,EAAEC,OAAOO,MAAM,UA2G5B,cAACI,EAAA,EAAD,CACIjE,KAAK,cACLC,UAAU,uHACVC,KAAK,yBACLqD,MAAOlB,EACPe,YAAaA,EACbc,QAAS,CACL,CACIX,MAAO,MACPvD,KAAM,wBAEV,CACIuD,MAAO,KACPvD,KAAM,kBAKlB,cAACmE,EAAA,EAAD,CACIC,UAAWC,YAAQvB,GACnBwB,eAnHU,SAACjB,GACnBA,EAAEkB,iBACF9B,cACAI,GAAa,GACbE,EAAcU,YAA+Bf,IAC7CO,EAAkB,CACdf,UAAU,EACVC,UAAU,EACVC,SAAS,EACTE,cAAc,IAEd+B,YAAQvB,IACRI,EAASsB,YAActC,IAAWuC,MAAK,SAACC,GACzB,GAAPA,GACA7B,GAAa,GACbE,EAAc,2BACPD,GADM,IAETZ,SAAU,sKAGA,GAAPwC,IACP3B,EAAc,MACdG,EAASyB,YAAc5C,EAAUW,IAAc+B,MAC3C,SAACC,GACG7B,GAAa,WA4FzBD,UAAWA,Q,wBC0CZgC,MAzMf,YAA0C,IAAb7C,EAAY,EAAZA,SACzB,EAAsCC,mBAAS,CAC3CE,SAAU,GACV2C,WAAY,GACZC,UAAW,GACXC,UAAW,KACXC,KAAM,KACNC,SAAU,GACV3C,aAAc,IACd4C,UAAWzC,YAAY,IAAI3B,MAC3BI,MAAO,CAAEG,QAAS,GAAIkB,IAAK,MAT/B,mBAAOG,EAAP,KAAoBC,EAApB,KAWA,EAAwCX,mBAAS,IAAIlB,MAArD,mBAAOX,EAAP,KAAqB8B,EAArB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAAoCb,mBAAS,MAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,EAA4Cf,mBAAS,CACjDE,SAAU,KACV2C,WAAY,KACZC,UAAW,KACXG,SAAU,KACVF,UAAW,KACXzC,aAAc,OANlB,mBAAOU,EAAP,KAAuBC,EAAvB,KASIf,EAOAQ,EAPAR,SACA2C,EAMAnC,EANAmC,WACAC,EAKApC,EALAoC,UACAE,EAIAtC,EAJAsC,KACAC,EAGAvC,EAHAuC,SACA3C,EAEAI,EAFAJ,aACApB,EACAwB,EADAxB,MAEEgC,EAAWC,cAgBXC,EAAc,SAACC,GAAD,OAChBV,EAAe,2BAAKD,GAAN,kBAAoBW,EAAEC,OAAOtD,KAAOqD,EAAEC,OAAOC,UA6B/D,OA3BAC,qBAAU,WAEN,OADAT,EAAcoC,YAAmCzC,IAC1C,WACHK,EAAc,SAEnB,CAACL,EAAaM,IAuBb,sBAAKxC,UAAU,QAAf,UACI,cAACkD,EAAA,EAAD,CACI1D,KAAK,WACLC,UAAU,0DACVC,KAAK,mBACLyD,YAAY,4EACZJ,MAAOrB,EACPc,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAEhB,cAACmB,EAAA,EAAD,CACIjE,KAAK,OACLC,UAAU,uEACVC,KAAK,kBACLqD,MAAOyB,EACP5B,YAAaA,EACbc,QAASkB,MAEb,cAAC1B,EAAA,EAAD,CACI1D,KAAK,eACLC,UAAU,iHACVC,KAAK,oBACLyD,YAAY,cACZJ,MAAOjB,EACPX,KAAK,SACLqB,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAEhB,cAAC,EAAD,CACI9C,KAAK,YACLC,UAAU,qGACVC,KAAK,eACLC,aAAcA,EACdC,aAxES,SAACW,GAClBkB,EAAgBlB,GAChB4B,EAAe,2BAAKD,GAAN,IAAmBF,YAAaC,YAAY1B,SAwEtD,cAAC,EAAD,CACIf,KAAK,cACLC,UAAU,4HACVC,KAAK,WACLgB,MAAOA,EACPC,kBA1Fc,SAACkC,GACnBA,EAAEC,OAAOO,MAAMC,QACfnB,EAAe,2BACRD,GADO,IAEVxB,MAAO,CACHG,QAAS0C,IAAIC,gBAAgBX,EAAEC,OAAOO,MAAM,IAC5CtB,IAAKc,EAAEC,OAAOO,MAAM,UAsF5B,oBAAIrD,UAAU,mBAAd,kDAEA,cAACoD,EAAA,EAAD,CACI5D,KAAK,YACLC,UAAU,8MACVC,KAAK,UACLyD,YAAY,sNACZJ,MAAOuB,EACP9B,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,KAED,OAAdE,QAAc,IAAdA,OAAA,EAAAA,EAAgB+B,aAAhB,OAA6BjC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAYuC,aACtC,qBAAK7E,UAAU,gCAAf,gBACKsC,QADL,IACKA,OADL,EACKA,EAAYuC,aAIrB,cAACC,EAAA,EAAD,CACItF,KAAK,YACLC,UAAU,kFACVC,KAAK,iBACLqF,SAAU,SAAChC,GAAD,OACNZ,EAAe,2BAAKD,GAAN,IAAmBqC,UAAWxB,MAEhDiC,WAAY,SAACjC,EAAOkC,EAAY5C,GAC5B,IAAI6C,EAAW,GACfxC,EAASyC,YAAmBpC,IAAQkB,MAAK,SAACC,GAClCkB,MAAMC,QAAQnB,IAAQA,EAAIZ,OAAS,GACnCY,EAAIoB,KAAI,SAACC,GAAD,OACJL,EAASM,KAAK,CACVhG,KAAM+F,EAAI/F,KACVuD,MAAOwC,EAAInE,QAIvB6D,EAAWC,GACX7C,GAAa,SAIzB,oBAAIrC,UAAU,mBAAd,sCACA,cAACoD,EAAA,EAAD,CACI5D,KAAK,aACLC,UAAU,kGACVC,KAAK,oBACLyD,YAAY,qKACZJ,MAAOsB,EACP7B,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAGhB,cAACc,EAAA,EAAD,CACI5D,KAAK,WACLC,UAAU,8HACVC,KAAK,uBACLyD,YAAW,mXACXJ,MAAO0B,EACPjC,eAAgBA,EAChBC,kBAAmBA,EACnBG,YAAaA,EACbN,WAAYA,IAGhB,cAACqB,EAAA,EAAD,CACIC,UAAWC,YAAQvB,GACnBwB,eAxIU,SAACjB,GACnBA,EAAEkB,iBACF1B,GAAa,GACbE,EAAcoC,YAAmCzC,IACjDO,EAAkB,CACdf,UAAU,EACV2C,YAAY,EACZC,WAAW,EACXG,UAAU,EACVF,WAAW,EACXzC,cAAc,IAEd+B,YAAQvB,IACRI,EAAS+C,YAAiBlE,EAAUW,IAAc+B,MAAK,SAACC,GACpD7B,GAAa,GACbqD,QAAQC,IAAI,gBAAiBzB,OA0H7B9B,UAAWA,QCtCZwD,MAvKf,YAA0D,IAAD,EAAzCC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAC3BC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,SAAUC,EAAwBL,EAAxBK,UAAWC,EAAaN,EAAbM,SACjCvD,EAAc,SAACC,GAAD,OAChBiD,EAAY,2BAAKD,GAAN,kBAAiBhD,EAAEC,OAAOtD,KAAOqD,EAAEC,OAAOC,UACnDL,EAAWC,cACjB,EAAkCnB,oBAAS,GAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAAoCb,mBAAS,MAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,EAA4Cf,mBAAS,CACjDwE,UAAU,EACVC,UAAU,EACVC,WAAW,IAHf,mBAAO1D,EAAP,KAAuBC,EAAvB,KAqCA,OANAO,qBAAU,WAEN,OADAT,EAAc6D,YAAqBP,IAC5B,WACHtD,EAAc,SAEnB,CAACsD,EAAUrD,IAEV,qCACI,sBAAKxC,UAAU,OAAf,UACI,wBACID,QAAQ,YACRC,UAAU,oCAFd,UAII,mBAAGA,UAAU,kCAJjB,oIAK4B,wEAE5B,uBACImB,KAAK,OACL3B,KAAK,WACL4B,GAAG,YACH+B,YAAY,0LACZJ,MAAOiD,EACPxF,SAAU,SAACqC,GACPD,EAAYC,GACZJ,EAAkB,2BACXD,GADU,IAEbwD,UAAU,MAGlBhG,UAAS,uCACuB,IAA5BwC,EAAewD,YACJ,OAAV1D,QAAU,IAAVA,OAAA,EAAAA,EAAY0D,UAAW,aAAe,aAE3CnG,MAAO,CAAEoB,aAAc,OACvB,mBAAiB,YACjBI,UAAQ,IAEZ,qBAAKrB,UAAU,mBAAf,gBAAmCsC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAY0D,cAEnD,sBAAKhG,UAAU,sBAAf,UACI,wBACID,QAAQ,iBACRC,UAAU,qCAFd,UAII,mBAAGA,UAAU,gCAJjB,uGAOA,uBACImB,KAAK,WACLnB,UAAS,wBACuB,IAA5BwC,EAAeyD,YACJ,OAAV3D,QAAU,IAAVA,OAAA,EAAAA,EAAY2D,UAAW,aAAe,aAE3CpG,MAAO,CAAEoB,aAAc,OACvBzB,KAAK,WACLuD,MAAOkD,EACP7E,GAAG,iBACHZ,SAAU,SAACqC,GACPD,EAAYC,GACZJ,EAAkB,2BACXD,GADU,IAEbyD,UAAU,MAGlB5E,UAAQ,IAEZ,qBAAKrB,UAAU,mBAAf,gBAAmCsC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAY2D,cAEnD,sBAAKjG,UAAU,sBAAf,UACI,wBACID,QAAQ,iBACRC,UAAU,qCAFd,UAII,mBAAGA,UAAU,8BAJjB,iGAOA,uBACImB,KAAK,WACLnB,UAAS,wBACwB,IAA7BwC,EAAe0D,aACJ,OAAV5D,QAAU,IAAVA,OAAA,EAAAA,EAAY4D,WAAY,aAAe,aAE5CrG,MAAO,CAAEoB,aAAc,OACvBzB,KAAK,YACLuD,MAAOmD,EACP9E,GAAG,iBACHZ,SAAU,SAACqC,GACPD,EAAYC,GACZJ,EAAkB,2BACXD,GADU,IAEb0D,WAAW,MAGnB7E,UAAQ,IAEZ,qBAAKrB,UAAU,mBAAf,gBAAmCsC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAY4D,eAEnD,sBAAKlG,UAAU,OAAf,UACI,wBACID,QAAQ,eACRC,UAAU,qCAFd,UAII,mBAAGA,UAAU,8BAJjB,4IAOA,4BACIQ,SAAU,SAACqC,GAAD,OAAOD,EAAYC,IAC7B7C,UAAU,cACVR,KAAK,WACL6B,UAAQ,EACRD,GAAG,eACH2B,MAAOoD,GANX,qBAOS,YAPT,sBAQW,CAAElF,aAAc,QAR3B,2BASe,0BATf,0BAWI,wBAAQ8B,MAAM,UAAd,8DACA,wBAAQA,MAAM,aAAd,sEAZJ,OAeJ,cAACY,EAAA,EAAD,CACIC,UAAWC,YAAQvB,GACnBwB,eApJU,SAACjB,GACnBA,EAAEkB,iBACF1B,GAAa,GACbE,EAAc6D,YAAqBP,IACnCpD,EAAkB,CACduD,UAAU,EACVC,UAAU,EACVC,WAAW,IAEXrC,YAAQvB,IACRI,EAAS2D,YAAWL,IAAW/B,MAAK,SAACC,GACjC7B,GAAa,GACF,GAAP6B,EAEA3B,EAAc,2BACPD,GADM,IAET0D,SAAU,6LAEA,GAAP9B,IAEP6B,GAAe,GACfxD,EAAc,WAgIlBH,UAAWA,QCjKZ,SAASkE,IAAU,IAAD,EAC7B,EAAgC9E,mBAAS,CACrCwE,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,YAJd,mBAAON,EAAP,KAAiBC,EAAjB,KAMA,EAAsCtE,oBAAS,GAA/C,mBAAO+E,EAAP,KAAoBR,EAApB,KACQI,EAAaN,EAAbM,SACR,OACI,qBAAKnG,UAAU,YAAf,SACI,sBAAKA,UAAU,6FAAf,UACI,cAAC,IAAD,CAAMwG,GAAG,IAAIxG,UAAU,iCAAvB,SACI,qBACIH,MAAO,CAAEmB,MAAO,QAASE,OAAQ,QACjCJ,IAA8B,uBAC9BC,IAAI,WAGZ,qBACIf,UAAU,uBACVH,MAAO,CAAE4G,WAAY,IAAKxG,SAAU,QAFxC,gFAMA,qBAAKD,UAAU,iBAAf,gNAIA,0BACIA,UAAU,8CADd,0BAEc,8CAFd,sBAGW,CAAEiB,aAAc,SAH3B,2BAKMsF,GACE,cAAC,EAAD,CACIT,YAAaA,EACbD,SAAUA,EACVE,eAAgBA,IAGvBQ,GACG,oBAAIvG,UAAU,mBAAd,wDAEHuG,IACiB,YAAbJ,EACG,cAAC,EAAD,CAAgB5E,SAAUsE,IAE1B,cAAC,EAAD,CAAmBtE,SAAUsE,KAGrC,sBAAK7F,UAAU,qBAAf,iJACqC,IACjC,cAAC,IAAD,CACIwG,GAAG,SACHxG,UAAU,+BAFd,iDAxBR,IAgCA,cAAC0G,EAAA,EAAD","file":"static/js/6.e789c79d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Calendar } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\nimport { ru } from \"react-date-range/src/locale\";\n\nfunction CalendarInput({ name, full_name, icon, calendarDate, handleSelect }) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n                style={{ fontSize: \"14px\" }}\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <div className=\"d-flex justify-content-center\">\n                <Calendar\n                    locale={ru}\n                    maxDate={new Date()}\n                    date={calendarDate}\n                    onChange={handleSelect}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default CalendarInput;\n","import React from \"react\";\n\nfunction ImageInput({ name, full_name, icon, image, handleChangeImage }) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                role=\"button\"\n                className=\"form-label text-gray w-100 py-0 fw-bold fs-6 d-inline-flex flex-column \"\n                style={{ fontSize: \"14px\" }}\n            >\n                <div className=\"d-inline-flex align-items-center\">\n                    <i class={`bi ${icon} fs-5 me-2`}></i>\n                    {full_name}\n                    <i class=\"bi bi-hand-index-thumb  fs-5 ms-2\"></i>\n                </div>\n                {image?.preview && (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <img\n                            src={image?.preview}\n                            alt=\"dummy\"\n                            width=\"300\"\n                            className=\"my-2\"\n                            style={{ borderRadius: \"10px\" }}\n                            height=\"300\"\n                        />\n                    </div>\n                )}\n            </label>\n            <input\n                type=\"file\"\n                className=\"d-none\"\n                id={name}\n                onChange={handleChangeImage}\n                required\n            />\n        </div>\n    );\n}\n\nexport default ImageInput;\n","import React, { useEffect, useState } from \"react\";\nimport { validateRegisterCompanyProfile } from \"../../Validate/formValidate\";\nimport SubmitButton from \"../SubmitButton\";\nimport isEmpty from \"../../Validate/isEmpty\";\nimport { check_company, signUpCompany } from \"../../../redux/actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport TextInput from \"../Form/TextInput\";\nimport TextAreaInput from \"../Form/TextAreaInput\";\nimport CalendarInput from \"../Form/CalendarInput\";\nimport SelectInput from \"../Form/SelectInput\";\nimport ImageInput from \"../Form/ImageInput\";\nimport convertDate from \"../../../utils/convertDate\";\n\nfunction CompanyProfile({ userData }) {\n    const [calendarDate, setCalendarDate] = useState(new Date());\n    const [profileData, setProfileData] = useState({\n        fullName: \"\",\n        compInfo: \"\",\n        address: \"\",\n        companyType: \"OHH\",\n        phone_number: \"993\",\n        image: { preview: \"\", raw: \"\" },\n        choosedDate: convertDate(new Date()),\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [formErrors, setFormErrors] = useState(null);\n    const [startedWriting, setStartedWriting] = useState({\n        fullName: null,\n        compInfo: null,\n        address: null,\n        phone_number: null,\n    });\n    const dispatch = useDispatch();\n    const { fullName, address, compInfo, companyType, phone_number, image } =\n        profileData;\n    const inputChange = (e) =>\n        setProfileData({ ...profileData, [e.target.name]: e.target.value });\n\n    const handleSelect = (date) => {\n        setCalendarDate(date);\n        setProfileData({ ...profileData, choosedDate: convertDate(date) });\n    };\n    const handleChangeImage = (e) => {\n        if (e.target.files.length) {\n            setProfileData({\n                ...profileData,\n                image: {\n                    preview: URL.createObjectURL(e.target.files[0]),\n                    raw: e.target.files[0],\n                },\n            });\n        }\n    };\n    useEffect(() => {\n        setFormErrors(validateRegisterCompanyProfile(profileData));\n        return () => {\n            setFormErrors(null);\n        };\n    }, [profileData, startedWriting]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        convertDate();\n        setIsLoading(true);\n        setFormErrors(validateRegisterCompanyProfile(profileData));\n        setStartedWriting({\n            fullName: true,\n            compInfo: true,\n            address: true,\n            phone_number: true,\n        });\n        if (isEmpty(formErrors)) {\n            dispatch(check_company(fullName)).then((res) => {\n                if (res == true) {\n                    setIsLoading(false);\n                    setFormErrors({\n                        ...formErrors,\n                        fullName: \"Такая компания уже существует\",\n                    });\n                    // console.log(\"Такая компания уже существует\");\n                } else if (res == false) {\n                    setFormErrors(null);\n                    dispatch(signUpCompany(userData, profileData)).then(\n                        (res) => {\n                            setIsLoading(false);\n                            // console.log(\"Ok\", res);\n                        }\n                    );\n                }\n            });\n        }\n    };\n\n    return (\n        <div className=\"w-100\">\n            <TextInput\n                name=\"fullName\"\n                full_name=\"Полное имя компании\"\n                icon=\"bi-building\"\n                placeholder=\"Adidas Company\"\n                value={fullName}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <TextAreaInput\n                name=\"compInfo\"\n                full_name=\"Информация о компании\"\n                icon=\"bi-file-earmark-text\"\n                placeholder={`Что вы можете сказать о компании. \\n Чем она занимается? `}\n                value={compInfo}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <TextInput\n                name=\"address\"\n                full_name=\"Адресс компании\"\n                icon=\"bi-geo-alt-fill\"\n                placeholder=\"Например: Adidas Company\"\n                value={address}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <TextInput\n                name=\"phone_number\"\n                full_name=\"Телефонный номер компании\"\n                icon=\"bi-telephone-fill\"\n                placeholder=\"99362535353\"\n                value={phone_number}\n                type=\"number\"\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n\n            <CalendarInput\n                name=\"calendar\"\n                full_name=\"Дата основания компании\"\n                icon=\"bi-calendar3\"\n                calendarDate={calendarDate}\n                handleSelect={handleSelect}\n            />\n            <ImageInput\n                name=\"upload-button\"\n                full_name=\"Загрузить изображение\"\n                icon=\"bi-image\"\n                image={image}\n                handleChangeImage={handleChangeImage}\n            />\n            <SelectInput\n                name=\"companyType\"\n                full_name=\"Выберите тип компании\"\n                icon=\"bi-gear-wide-connected\"\n                value={companyType}\n                inputChange={inputChange}\n                options={[\n                    {\n                        value: \"OHH\",\n                        name: \"Hojalyk Jemgyýeti\",\n                    },\n                    {\n                        value: \"IP\",\n                        name: \"Telekeçi\",\n                    },\n                ]}\n            />\n\n            <SubmitButton\n                disabled={!isEmpty(formErrors)}\n                submitFunction={submitHandler}\n                isLoading={isLoading}\n            />\n        </div>\n    );\n}\n\nexport default CompanyProfile;\n","import React, { useEffect, useState } from \"react\";\n\nimport SubmitButton from \"./SubmitButton\";\nimport isEmpty from \"../Validate/isEmpty\";\nimport TextInput from \"./Form/TextInput\";\nimport TextAreaInput from \"./Form/TextAreaInput\";\nimport SelectInput from \"./Form/SelectInput\";\nimport CalendarInput from \"./Form/CalendarInput\";\nimport convertDate from \"../../utils/convertDate\";\nimport ImageInput from \"./Form/ImageInput\";\nimport { validateRegisterFreelanacerProfile } from \"../Validate/formValidate\";\nimport { signUpFreelancer } from \"../../redux/actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport RegisterDropSelect from \"./Form/RegisterDropSelect\";\nimport { search_professions } from \"../../redux/actions/main\";\nimport { citiesArray } from \"../../utils/cities\";\n\nfunction FreelancerProfile({ userData }) {\n    const [profileData, setProfileData] = useState({\n        fullName: \"\",\n        experience: \"\",\n        knowledge: \"\",\n        profesion: null,\n        city: \"Ag\",\n        projects: \"\",\n        phone_number: 993,\n        birthDate: convertDate(new Date()),\n        image: { preview: \"\", raw: \"\" },\n    });\n    const [calendarDate, setCalendarDate] = useState(new Date());\n    const [isLoading, setIsLoading] = useState(false);\n    const [formErrors, setFormErrors] = useState(null);\n    const [startedWriting, setStartedWriting] = useState({\n        fullName: null,\n        experience: null,\n        knowledge: null,\n        projects: null,\n        profesion: null,\n        phone_number: null,\n    });\n    const {\n        fullName,\n        experience,\n        knowledge,\n        city,\n        projects,\n        phone_number,\n        image,\n    } = profileData;\n    const dispatch = useDispatch();\n    const handleChangeImage = (e) => {\n        if (e.target.files.length) {\n            setProfileData({\n                ...profileData,\n                image: {\n                    preview: URL.createObjectURL(e.target.files[0]),\n                    raw: e.target.files[0],\n                },\n            });\n        }\n    };\n    const handleSelect = (date) => {\n        setCalendarDate(date);\n        setProfileData({ ...profileData, choosedDate: convertDate(date) });\n    };\n    const inputChange = (e) =>\n        setProfileData({ ...profileData, [e.target.name]: e.target.value });\n\n    useEffect(() => {\n        setFormErrors(validateRegisterFreelanacerProfile(profileData));\n        return () => {\n            setFormErrors(null);\n        };\n    }, [profileData, startedWriting]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormErrors(validateRegisterFreelanacerProfile(profileData));\n        setStartedWriting({\n            fullName: true,\n            experience: true,\n            knowledge: true,\n            projects: true,\n            profesion: true,\n            phone_number: true,\n        });\n        if (isEmpty(formErrors)) {\n            dispatch(signUpFreelancer(userData, profileData)).then((res) => {\n                setIsLoading(false);\n                console.log(\"Ok freelancer\", res);\n            });\n        }\n    };\n\n    return (\n        <div className=\"w-100\">\n            <TextInput\n                name=\"fullName\"\n                full_name=\"Полное имя\"\n                icon=\"bi-person-circle\"\n                placeholder=\"Иван Петрович\"\n                value={fullName}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <SelectInput\n                name=\"city\"\n                full_name=\"Где вы живёте\"\n                icon=\"bi-pin-map-fill\"\n                value={city}\n                inputChange={inputChange}\n                options={citiesArray}\n            />\n            <TextInput\n                name=\"phone_number\"\n                full_name=\"Ваш телефонный номер\"\n                icon=\"bi-telephone-fill\"\n                placeholder=\"99362535353\"\n                value={phone_number}\n                type=\"number\"\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <CalendarInput\n                name=\"birthDate\"\n                full_name=\"Ваша дата рождения\"\n                icon=\"bi-calendar3\"\n                calendarDate={calendarDate}\n                handleSelect={handleSelect}\n            />\n            <ImageInput\n                name=\"upload-logo\"\n                full_name=\"Загрузить изображение\"\n                icon=\"bi-image\"\n                image={image}\n                handleChangeImage={handleChangeImage}\n            />\n            <h3 className=\"text-center mb-4\">Знания</h3>\n\n            <TextAreaInput\n                name=\"knowledge\"\n                full_name=\"Знания / Диплом / Что Вы умеете или знаете?\"\n                icon=\"bi-book\"\n                placeholder=\"Что вы можете рассказать о своих знаниях.\"\n                value={knowledge}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            {startedWriting?.profesion && formErrors?.profession && (\n                <div className=\"text-danger fs-14 text-center\">\n                    {formErrors?.profession}\n                </div>\n            )}\n\n            <RegisterDropSelect\n                name=\"profesion\"\n                full_name=\"Ваша профессия\"\n                icon=\"bi-people-fill\"\n                clickFun={(value) =>\n                    setProfileData({ ...profileData, profesion: value })\n                }\n                optionsFun={(value, setOptions, setIsLoading) => {\n                    let response = [];\n                    dispatch(search_professions(value)).then((res) => {\n                        if (Array.isArray(res) && res.length > 0) {\n                            res.map((opt) =>\n                                response.push({\n                                    name: opt.name,\n                                    value: opt.id,\n                                })\n                            );\n                        }\n                        setOptions(response);\n                        setIsLoading(false);\n                    });\n                }}\n            />\n            <h3 className=\"text-center mb-4\">Опыт</h3>\n            <TextAreaInput\n                name=\"experience\"\n                full_name=\"Опыт (где работали?)\"\n                icon=\"bi-briefcase-fill\"\n                placeholder=\"Что вы можете рассказать о себе.\"\n                value={experience}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n\n            <TextAreaInput\n                name=\"projects\"\n                full_name=\"Какие проекты вы делали\"\n                icon=\"bi-file-earmark-text\"\n                placeholder={`Что вы можете рассказать о своей практике? \\nВ каких проектах участовали?`}\n                value={projects}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n\n            <SubmitButton\n                disabled={!isEmpty(formErrors)}\n                submitFunction={submitHandler}\n                isLoading={isLoading}\n            />\n        </div>\n    );\n}\n\nexport default FreelancerProfile;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { check_user } from \"../../../redux/actions/auth\";\nimport { validateRegisterInfo } from \"../../Validate/formValidate\";\nimport isEmpty from \"../../Validate/isEmpty\";\nimport SubmitButton from \"../SubmitButton\";\n\nfunction Form({ formData, setFormData, setLoadProfile }) {\n    const { username, password, password2, userType } = formData;\n    const inputChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(false);\n    const [formErrors, setFormErrors] = useState(null);\n    const [startedWriting, setStartedWriting] = useState({\n        username: false,\n        password: false,\n        password2: false,\n    });\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormErrors(validateRegisterInfo(formData));\n        setStartedWriting({\n            username: true,\n            password: true,\n            password2: true,\n        });\n        if (isEmpty(formErrors)) {\n            dispatch(check_user(username)).then((res) => {\n                setIsLoading(false);\n                if (res == true) {\n                    // console.log(\"Такой пользователь уже существует\");\n                    setFormErrors({\n                        ...formErrors,\n                        username: \"Такой пользователь уже существует\",\n                    });\n                } else if (res == false) {\n                    // console.log(\"Такой пользователь не существует\");\n                    setLoadProfile(true);\n                    setFormErrors(null);\n                }\n            });\n        }\n    };\n    useEffect(() => {\n        setFormErrors(validateRegisterInfo(formData));\n        return () => {\n            setFormErrors(null);\n        };\n    }, [formData, startedWriting]);\n    return (\n        <>\n            <div className=\"mb-4\">\n                <label\n                    htmlFor=\"inputName\"\n                    className=\"form-label text-gray py-0 fw-bold\"\n                >\n                    <i className=\"bi bi-person-circle fs-5 me-2\"></i>\n                    Придумайте имя аккаунту <small>(логин)</small>\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"inputName\"\n                    placeholder=\"Нужно только для входа в аккаунт: adidas_company\"\n                    value={username}\n                    onChange={(e) => {\n                        inputChange(e);\n                        setStartedWriting({\n                            ...startedWriting,\n                            username: true,\n                        });\n                    }}\n                    className={`form-control sm-placeholder ${\n                        startedWriting.username === true &&\n                        (formErrors?.username ? \"is-invalid\" : \"is-valid\")\n                    }`}\n                    style={{ borderRadius: \"7px\" }}\n                    aria-describedby=\"inputName\"\n                    required\n                />\n                <div className=\"invalid-feedback\">{formErrors?.username}</div>\n            </div>\n            <div className=\"mb-3 has-validation\">\n                <label\n                    htmlFor=\"inputPassword1\"\n                    className=\"form-label text-gray fw-bold py-0 \"\n                >\n                    <i className=\"bi bi-unlock-fill me-2 fs-5\"></i>\n                    Придумайте пароль\n                </label>\n                <input\n                    type=\"password\"\n                    className={`form-control ${\n                        startedWriting.password === true &&\n                        (formErrors?.password ? \"is-invalid\" : \"is-valid\")\n                    }`}\n                    style={{ borderRadius: \"7px\" }}\n                    name=\"password\"\n                    value={password}\n                    id=\"inputPassword1\"\n                    onChange={(e) => {\n                        inputChange(e);\n                        setStartedWriting({\n                            ...startedWriting,\n                            password: true,\n                        });\n                    }}\n                    required\n                />\n                <div className=\"invalid-feedback\">{formErrors?.password}</div>\n            </div>\n            <div className=\"mb-3 has-validation\">\n                <label\n                    htmlFor=\"inputPassword2\"\n                    className=\"form-label text-gray fw-bold py-0 \"\n                >\n                    <i className=\"bi bi-lock-fill me-2 fs-5\"></i>\n                    Повторите пароль\n                </label>\n                <input\n                    type=\"password\"\n                    className={`form-control ${\n                        startedWriting.password2 === true &&\n                        (formErrors?.password2 ? \"is-invalid\" : \"is-valid\")\n                    }`}\n                    style={{ borderRadius: \"7px\" }}\n                    name=\"password2\"\n                    value={password2}\n                    id=\"inputPassword2\"\n                    onChange={(e) => {\n                        inputChange(e);\n                        setStartedWriting({\n                            ...startedWriting,\n                            password2: true,\n                        });\n                    }}\n                    required\n                />\n                <div className=\"invalid-feedback\">{formErrors?.password2}</div>\n            </div>\n            <div className=\"mb-3\">\n                <label\n                    htmlFor=\"inputSelect1\"\n                    className=\"form-label text-gray fw-bold py-0 \"\n                >\n                    <i className=\"bi bi-ui-radios me-2 fs-5\"></i>\n                    Выберите тип регистрации\n                </label>\n                <select\n                    onChange={(e) => inputChange(e)}\n                    className=\"form-select\"\n                    name=\"userType\"\n                    required\n                    id=\"inputSelect1\"\n                    value={userType}\n                    name=\"userType\"\n                    style={{ borderRadius: \"7px\" }}\n                    aria-label=\"Default select example\"\n                >\n                    <option value=\"COMPANY\">Компания</option>\n                    <option value=\"FREELANCER\">Фрилансер</option>\n                </select>\n            </div>\n            <SubmitButton\n                disabled={!isEmpty(formErrors)}\n                submitFunction={submitHandler}\n                isLoading={isLoading}\n            />\n        </>\n    );\n}\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ShortFooter from \"../components/Footer/ShortFooter\";\nimport CompanyProfile from \"../components/Register/CompanyProfile/index\";\nimport FreelancerProfile from \"../components/Register/FreelancerProfile\";\nimport Form from \"../components/Register/Form\";\n\nexport default function SignUp() {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n        userType: \"COMPANY\",\n    });\n    const [loadProfile, setLoadProfile] = useState(false);\n    const { userType } = formData;\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex  flex-column py-3 align-items-start justify-content-md-center align-items-md-center\">\n                <Link to=\"/\" className=\"mx-md-0 mt-2 mb-3 ps-4 ps-md-0\">\n                    <img\n                        style={{ width: \"135px\", height: \"34px\" }}\n                        src={process.env.PUBLIC_URL + \"/images/big-logo.svg\"}\n                        alt=\"Logo\"\n                    />\n                </Link>\n                <div\n                    className=\"h2 py-2 ps-4 ps-md-0\"\n                    style={{ fontWeight: 500, fontSize: \"32px\" }}\n                >\n                    Регистрация\n                </div>\n                <div className=\"p ps-4 ps-md-0\">\n                    Добейтесь профессионального успеха\n                </div>\n\n                <form\n                    className=\"bg-white col-12 p-4 col-md-9 col-lg-6 my-4\"\n                    className=\"bg-white col-12 p-4 col-md-9 col-lg-6 my-4\"\n                    style={{ borderRadius: \"10px\" }}\n                >\n                    {!loadProfile && (\n                        <Form\n                            setFormData={setFormData}\n                            formData={formData}\n                            setLoadProfile={setLoadProfile}\n                        />\n                    )}\n                    {loadProfile && (\n                        <h3 className=\"text-center mb-4\">Профиль</h3>\n                    )}\n                    {loadProfile &&\n                        (userType === \"COMPANY\" ? (\n                            <CompanyProfile userData={formData} />\n                        ) : (\n                            <FreelancerProfile userData={formData} />\n                        ))}\n\n                    <div className=\"p my-3 text-center\">\n                        Уже зарегистрированы в LinkedIn?{\" \"}\n                        <Link\n                            to=\"/login\"\n                            className=\"text-decoration-none fw-bold\"\n                        >\n                            Войти\n                        </Link>\n                    </div>\n                </form>\n                <ShortFooter />\n            </div>\n        </div>\n    );\n}\n"],"sourceRoot":""}