{"version":3,"sources":["utils/cities.jsx","components/Register/Form/CalendarInput.jsx","components/Register/Form/ImageInput.jsx","components/Register/Form/RegisterDropSelect.jsx","components/Footer/ShortFooter.jsx","components/Register/CompanyProfile/index.jsx","components/Register/FreelancerProfile.jsx","components/Register/Form/index.jsx","containers/SignUp.jsx","utils/convertDate.jsx","redux/actions/main.js","components/Register/SubmitButton/index.jsx","components/Validate/formValidate.jsx","components/Validate/isEmpty.jsx","components/Register/Form/SelectInput.jsx","components/Register/Form/TextAreaInput.jsx","components/Register/Form/TextInput.jsx"],"names":["citiesArray","name","value","CalendarInput","full_name","icon","calendarDate","handleSelect","style","marginBottom","htmlFor","className","fontSize","class","locale","ru","maxDate","Date","date","onChange","ImageInput","image","handleChangeImage","role","preview","src","alt","width","borderRadius","height","type","id","required","RegisterDropSelect","clickFun","optionsFun","defaultOpt","resetFun","useState","choosedItem","setChoosedItem","isLoading","setIsLoading","opts","setOptions","searchValue","setSearchValue","sawDefaultOpt","setSawDefaultOpt","useEffect","length","color","outline","boxShadow","background","placeholder","e","target","overflowY","maxHeight","onClick","fontWeight","Array","isArray","map","option","ShortFooter","CompanyProfile","userData","setCalendarDate","fullName","compInfo","address","companyType","phone_number","raw","choosedDate","convertDate","profileData","setProfileData","formErrors","setFormErrors","startedWriting","setStartedWriting","dispatch","useDispatch","inputChange","validateRegisterCompanyProfile","TextInput","TextAreaInput","files","URL","createObjectURL","SelectInput","options","SubmitButton","disabled","isEmpty","submitFunction","preventDefault","check_company","then","res","signUpCompany","FreelancerProfile","experience","knowledge","profesion","city","projects","birthDate","validateRegisterFreelanacerProfile","profession","response","search_professions","opt","push","signUpFreelancer","console","log","Form","formData","setFormData","setLoadProfile","username","password","password2","userType","validateRegisterInfo","check_user","SignUp","loadProfile","to","process","convert","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","mmChars","split","ddChars","getUpdatedTime","updated","today","release","diffTime","Math","abs","ceil","getAge","dateString","age","m","load_jobs","conf","oldJobs","a","axios","get","config","LOAD_MORE_JOBS","old_jobs","new_jobs","data","results","next","prev","count","LOAD_JOBS","payload","load_freelancers","oldData","LOAD_MORE_FREELANCERS","old_data","new_data","LOAD_FREELANCERS","get_profession","search_company","search_freelancer","load_job","pk","post_job","jobData","user","localStorage","getItem","body","JSON","stringify","min_salary","max_salary","after_meeting","min_experience","max_experience","work_time","skills","description","authConfig","headers","Authorization","Accept","post","retrieve_freelancer","values","errors","trim","usernameError","passwordError","password2passwordError","password2Error","companyName","phoneNumber2","phoneNumber","freelancerName","freelancerinput","professionchoose","validateJobPost","freelancermaxcost","freelancercost","notcorrectfield","hasOwnProperty","Object","prototype","obj","key","call","max_length","min_length","max","min"],"mappings":"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","file":"static/js/5.14e0dfc6.chunk.js","sourcesContent":["export const citiesArray = [\n    { name: \"Ашхабад\", value: \"Ag\" },\n    { name: \"Ахал\", value: \"Ah\" },\n    { name: \"Балканы\", value: \"Bl\" },\n    { name: \"Мары\", value: \"Mr\" },\n    { name: \"Дашогуз\", value: \"Dz\" },\n    { name: \"Лебап\", value: \"Lb\" },\n];\n","import React from \"react\";\nimport { Calendar } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\nimport { ru } from \"react-date-range/src/locale\";\n\nfunction CalendarInput({ name, full_name, icon, calendarDate, handleSelect }) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n                style={{ fontSize: \"14px\" }}\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <div className=\"d-flex justify-content-center\">\n                <Calendar\n                    locale={ru}\n                    maxDate={new Date()}\n                    date={calendarDate}\n                    onChange={handleSelect}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default CalendarInput;\n","import React from \"react\";\n\nfunction ImageInput({ name, full_name, icon, image, handleChangeImage }) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                role=\"button\"\n                className=\"form-label text-gray w-100 py-0 fw-bold fs-6 d-inline-flex flex-column \"\n                style={{ fontSize: \"14px\" }}\n            >\n                <div className=\"d-inline-flex align-items-center\">\n                    <i class={`bi ${icon} fs-5 me-2`}></i>\n                    {full_name}\n                    <i class=\"bi bi-hand-index-thumb  fs-5 ms-2\"></i>\n                </div>\n                {image?.preview && (\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <img\n                            src={image?.preview}\n                            alt=\"dummy\"\n                            width=\"300\"\n                            className=\"my-2\"\n                            style={{ borderRadius: \"10px\" }}\n                            height=\"300\"\n                        />\n                    </div>\n                )}\n            </label>\n            <input\n                type=\"file\"\n                className=\"d-none\"\n                id={name}\n                onChange={handleChangeImage}\n                required\n            />\n        </div>\n    );\n}\n\nexport default ImageInput;\n","import React, { useEffect, useState } from \"react\";\n\nfunction RegisterDropSelect({\n    name,\n    full_name,\n    icon,\n    clickFun,\n    optionsFun,\n    defaultOpt,\n    resetFun,\n}) {\n    const [choosedItem, setChoosedItem] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [opts, setOptions] = useState([]);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [sawDefaultOpt, setSawDefaultOpt] = useState(false);\n\n    useEffect(() => {\n        if (searchValue.length >= 2) {\n            setIsLoading(true);\n            optionsFun(searchValue, setOptions, setIsLoading);\n        }\n    }, [searchValue]);\n    useEffect(() => {\n        // Used for starting if it has default value\n        if (defaultOpt && !sawDefaultOpt) {\n            defaultOpt(setChoosedItem);\n            setSawDefaultOpt(true);\n        }\n    }, [defaultOpt]);\n    return (\n        <div\n            style={{ color: \"rgb(51, 51, 51)\", marginBottom: \"2rem\" }}\n            className=\"dropdown position-relative\"\n        >\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <button\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n                style={{\n                    borderRadius: \"7px\",\n                    outline: \"none\",\n                    boxShadow: \"none\",\n                }}\n                className=\"w-100 btn px-3 d-flex justify-content-between align-items-center border dropdown-toggle truncate-overflow-1\"\n            >\n                {choosedItem?.name ? choosedItem.name : full_name}\n                <i class=\"ms-2 bi bi-chevron-down fs-14\"></i>\n            </button>\n            <ul\n                class=\"dropdown-menu mt-1 p-0 \"\n                style={{ borderRadius: \"10px\", width: \"90%\" }}\n            >\n                <div\n                    className=\"my-3 mx-auto d-flex px-2 align-items-center\"\n                    style={{\n                        borderRadius: \"10px\",\n                        width: \"90%\",\n                        background: \"rgba(202,204,206, 0.4)\",\n                    }}\n                >\n                    <i class=\"bi bi-search text-muted\"></i>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Поиск...\"\n                        value={searchValue}\n                        onChange={(e) => setSearchValue(e.target.value)}\n                        className=\"form-control border-0  bg-transparent sm-placeholder\"\n                        style={{\n                            outline: \"none\",\n                            boxShadow: \"none\",\n                        }}\n                        required\n                    />\n                </div>\n                {isLoading && (\n                    <div className=\"text-center my-2 text-primary\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    style={{\n                        overflowY: \"scroll\",\n                        maxHeight: \"150px\",\n                    }}\n                >\n                    {choosedItem ? (\n                        <div className=\"px-2\">\n                            <div\n                                onClick={() => {\n                                    setChoosedItem(null);\n                                    resetFun();\n                                }}\n                                role=\"button\"\n                                style={{\n                                    borderRadius: \"10px\",\n                                    fontWeight: \"normal\",\n                                }}\n                                className=\"dropdown-item truncate-overflow-1 blue-btn justify-content-between align-items-center my-2 py-2 d-flex\"\n                            >\n                                <span>{choosedItem.name}</span>\n                                <i class=\"bi bi-x-lg\"></i>\n                            </div>\n                        </div>\n                    ) : (\n                        \"\"\n                    )}\n                    {Array.isArray(opts) &&\n                        opts.length > 0 &&\n                        opts.map((option) => {\n                            return (\n                                <div\n                                    onClick={() => {\n                                        setChoosedItem({ name: option.name });\n                                        clickFun(option.value);\n                                    }}\n                                    role=\"button\"\n                                    className=\"dropdown-item py-2\"\n                                >\n                                    {option.name}\n                                </div>\n                            );\n                        })}\n                </div>\n            </ul>\n        </div>\n    );\n}\n\nexport default RegisterDropSelect;\n","import React from \"react\";\n\nfunction ShortFooter() {\n    return (\n        <div\n            className=\"container  text-gray fw-bold px-2 px-md-5\"\n            style={{ fontSize: \"12px\" }}\n        >\n            <div className=\"row  d-inline-flex flex-md-column  flex-lg-row col-12 col-md-6 col-lg-auto me-2\">\n                <div className=\"col-auto mt-1\">Linkedin</div>\n                <div className=\"col-auto mt-1\">About</div>\n                <div className=\"col-auto mt-1\">Accessibility</div>\n                <div className=\"col-auto mt-1\">User Agreement</div>\n                <div className=\"col-auto mt-1\">Privacy Policy</div>\n            </div>\n\n            <div className=\"row mt-2 d-inline-flex flex-md-column flex-lg-row  col-md-6 col-lg-auto\">\n                <div className=\"col-auto mt-1\">Cookie Policy</div>\n                <div className=\"col-auto mt-1\">Copyright Policy</div>\n                <div className=\"col-auto mt-1\">Brand Policy </div>\n                <div className=\"col-auto mt-1\">Guest </div>\n                <div className=\"col-auto mt-1\">Controls Community </div>\n                <div className=\"col-auto mt-1\">Guidelines </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ShortFooter;\n","import React, { useEffect, useState } from \"react\";\nimport { validateRegisterCompanyProfile } from \"../../Validate/formValidate\";\nimport SubmitButton from \"../SubmitButton\";\nimport isEmpty from \"../../Validate/isEmpty\";\nimport { check_company, signUpCompany } from \"../../../redux/actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport TextInput from \"../Form/TextInput\";\nimport TextAreaInput from \"../Form/TextAreaInput\";\nimport CalendarInput from \"../Form/CalendarInput\";\nimport SelectInput from \"../Form/SelectInput\";\nimport ImageInput from \"../Form/ImageInput\";\nimport convertDate from \"../../../utils/convertDate\";\n\nfunction CompanyProfile({ userData }) {\n    const [calendarDate, setCalendarDate] = useState(new Date());\n    const [profileData, setProfileData] = useState({\n        fullName: \"\",\n        compInfo: \"\",\n        address: \"\",\n        companyType: \"OHH\",\n        phone_number: \"993\",\n        image: { preview: \"\", raw: \"\" },\n        choosedDate: convertDate(new Date()),\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [formErrors, setFormErrors] = useState(null);\n    const [startedWriting, setStartedWriting] = useState({\n        fullName: null,\n        compInfo: null,\n        address: null,\n        phone_number: null,\n    });\n    const dispatch = useDispatch();\n    const { fullName, address, compInfo, companyType, phone_number, image } =\n        profileData;\n    const inputChange = (e) =>\n        setProfileData({ ...profileData, [e.target.name]: e.target.value });\n\n    const handleSelect = (date) => {\n        setCalendarDate(date);\n        setProfileData({ ...profileData, choosedDate: convertDate(date) });\n    };\n    const handleChangeImage = (e) => {\n        if (e.target.files.length) {\n            setProfileData({\n                ...profileData,\n                image: {\n                    preview: URL.createObjectURL(e.target.files[0]),\n                    raw: e.target.files[0],\n                },\n            });\n        }\n    };\n    useEffect(() => {\n        setFormErrors(validateRegisterCompanyProfile(profileData));\n        return () => {\n            setFormErrors(null);\n        };\n    }, [profileData, startedWriting]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormErrors(validateRegisterCompanyProfile(profileData));\n        setStartedWriting({\n            fullName: true,\n            compInfo: true,\n            address: true,\n            phone_number: true,\n        });\n        if (isEmpty(formErrors)) {\n            dispatch(check_company(fullName)).then((res) => {\n                if (res == true) {\n                    setIsLoading(false);\n                    setFormErrors({\n                        ...formErrors,\n                        fullName: \"Такая компания уже существует\",\n                    });\n                    // console.log(\"Такая компания уже существует\");\n                } else if (res == false) {\n                    setFormErrors(null);\n                    dispatch(signUpCompany(userData, profileData)).then(\n                        (res) => {\n                            setIsLoading(false);\n                            // console.log(\"Ok\", res);\n                        }\n                    );\n                }\n            });\n        }\n    };\n\n    return (\n        <div className=\"w-100\">\n            <TextInput\n                name=\"fullName\"\n                full_name=\"Полное имя компании\"\n                icon=\"bi-building\"\n                placeholder=\"Adidas Company\"\n                value={fullName}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <TextAreaInput\n                name=\"compInfo\"\n                full_name=\"Информация о компании\"\n                icon=\"bi-file-earmark-text\"\n                placeholder={`Что вы можете сказать о компании. \\n Чем она занимается? `}\n                value={compInfo}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <TextInput\n                name=\"address\"\n                full_name=\"Адресс компании\"\n                icon=\"bi-geo-alt-fill\"\n                placeholder=\"Например: Adidas Company\"\n                value={address}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <TextInput\n                name=\"phone_number\"\n                full_name=\"Телефонный номер компании\"\n                icon=\"bi-telephone-fill\"\n                placeholder=\"99362535353\"\n                value={phone_number}\n                type=\"number\"\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n\n            <CalendarInput\n                name=\"calendar\"\n                full_name=\"Дата основания компании\"\n                icon=\"bi-calendar3\"\n                calendarDate={calendarDate}\n                handleSelect={handleSelect}\n            />\n            <ImageInput\n                name=\"upload-button\"\n                full_name=\"Загрузить изображение\"\n                icon=\"bi-image\"\n                image={image}\n                handleChangeImage={handleChangeImage}\n            />\n            <SelectInput\n                name=\"companyType\"\n                full_name=\"Выберите тип компании\"\n                icon=\"bi-gear-wide-connected\"\n                value={companyType}\n                inputChange={inputChange}\n                options={[\n                    {\n                        value: \"OHH\",\n                        name: \"Hojalyk Jemgyýeti\",\n                    },\n                    {\n                        value: \"IP\",\n                        name: \"Telekeçi\",\n                    },\n                ]}\n            />\n\n            <SubmitButton\n                disabled={!isEmpty(formErrors)}\n                submitFunction={submitHandler}\n                isLoading={isLoading}\n            />\n        </div>\n    );\n}\n\nexport default CompanyProfile;\n","import React, { useEffect, useState } from \"react\";\n\nimport SubmitButton from \"./SubmitButton\";\nimport isEmpty from \"../Validate/isEmpty\";\nimport TextInput from \"./Form/TextInput\";\nimport TextAreaInput from \"./Form/TextAreaInput\";\nimport SelectInput from \"./Form/SelectInput\";\nimport CalendarInput from \"./Form/CalendarInput\";\nimport convertDate from \"../../utils/convertDate\";\nimport ImageInput from \"./Form/ImageInput\";\nimport { validateRegisterFreelanacerProfile } from \"../Validate/formValidate\";\nimport { signUpFreelancer } from \"../../redux/actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport RegisterDropSelect from \"./Form/RegisterDropSelect\";\nimport { search_professions } from \"../../redux/actions/main\";\nimport { citiesArray } from \"../../utils/cities\";\n\nfunction FreelancerProfile({ userData }) {\n    const [profileData, setProfileData] = useState({\n        fullName: \"\",\n        experience: \"\",\n        knowledge: \"\",\n        profesion: null,\n        city: \"Ag\",\n        projects: \"\",\n        phone_number: 993,\n        birthDate: convertDate(new Date()),\n        image: { preview: \"\", raw: \"\" },\n    });\n    const [calendarDate, setCalendarDate] = useState(new Date());\n    const [isLoading, setIsLoading] = useState(false);\n    const [formErrors, setFormErrors] = useState(null);\n    const [startedWriting, setStartedWriting] = useState({\n        fullName: null,\n        experience: null,\n        knowledge: null,\n        projects: null,\n        profesion: null,\n        phone_number: null,\n    });\n    const {\n        fullName,\n        experience,\n        knowledge,\n        city,\n        projects,\n        phone_number,\n        image,\n    } = profileData;\n    const dispatch = useDispatch();\n    const handleChangeImage = (e) => {\n        if (e.target.files.length) {\n            setProfileData({\n                ...profileData,\n                image: {\n                    preview: URL.createObjectURL(e.target.files[0]),\n                    raw: e.target.files[0],\n                },\n            });\n        }\n    };\n    const handleSelect = (date) => {\n        setCalendarDate(date);\n        setProfileData({ ...profileData, choosedDate: convertDate(date) });\n    };\n    const inputChange = (e) =>\n        setProfileData({ ...profileData, [e.target.name]: e.target.value });\n\n    useEffect(() => {\n        setFormErrors(validateRegisterFreelanacerProfile(profileData));\n        return () => {\n            setFormErrors(null);\n        };\n    }, [profileData, startedWriting]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormErrors(validateRegisterFreelanacerProfile(profileData));\n        setStartedWriting({\n            fullName: true,\n            experience: true,\n            knowledge: true,\n            projects: true,\n            profesion: true,\n            phone_number: true,\n        });\n        if (isEmpty(formErrors)) {\n            dispatch(signUpFreelancer(userData, profileData)).then((res) => {\n                setIsLoading(false);\n                console.log(\"Ok freelancer\", res);\n            });\n        }\n    };\n\n    return (\n        <div className=\"w-100\">\n            <TextInput\n                name=\"fullName\"\n                full_name=\"Полное имя\"\n                icon=\"bi-person-circle\"\n                placeholder=\"Иван Петрович\"\n                value={fullName}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <SelectInput\n                name=\"city\"\n                full_name=\"Где вы живёте\"\n                icon=\"bi-pin-map-fill\"\n                value={city}\n                inputChange={inputChange}\n                options={citiesArray}\n            />\n            <TextInput\n                name=\"phone_number\"\n                full_name=\"Ваш телефонный номер\"\n                icon=\"bi-telephone-fill\"\n                placeholder=\"99362535353\"\n                value={phone_number}\n                type=\"number\"\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            <CalendarInput\n                name=\"birthDate\"\n                full_name=\"Ваша дата рождения\"\n                icon=\"bi-calendar3\"\n                calendarDate={calendarDate}\n                handleSelect={handleSelect}\n            />\n            <ImageInput\n                name=\"upload-logo\"\n                full_name=\"Загрузить изображение\"\n                icon=\"bi-image\"\n                image={image}\n                handleChangeImage={handleChangeImage}\n            />\n            <h3 className=\"text-center mb-4\">Знания</h3>\n\n            <TextAreaInput\n                name=\"knowledge\"\n                full_name=\"Знания / Диплом / Что Вы умеете или знаете?\"\n                icon=\"bi-book\"\n                placeholder=\"Что вы можете рассказать о своих знаниях.\"\n                value={knowledge}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n            {startedWriting?.profesion && formErrors?.profession && (\n                <div className=\"text-danger fs-14 text-center\">\n                    {formErrors?.profession}\n                </div>\n            )}\n\n            <RegisterDropSelect\n                name=\"profesion\"\n                full_name=\"Ваша профессия\"\n                icon=\"bi-people-fill\"\n                clickFun={(value) =>\n                    setProfileData({ ...profileData, profesion: value })\n                }\n                optionsFun={(value, setOptions, setIsLoading) => {\n                    let response = [];\n                    dispatch(search_professions(value)).then((res) => {\n                        if (Array.isArray(res) && res.length > 0) {\n                            res.map((opt) =>\n                                response.push({\n                                    name: opt.name,\n                                    value: opt.id,\n                                })\n                            );\n                        }\n                        setOptions(response);\n                        setIsLoading(false);\n                    });\n                }}\n            />\n            <h3 className=\"text-center mb-4\">Опыт</h3>\n            <TextAreaInput\n                name=\"experience\"\n                full_name=\"Опыт (где работали?)\"\n                icon=\"bi-briefcase-fill\"\n                placeholder=\"Что вы можете рассказать о себе.\"\n                value={experience}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n\n            <TextAreaInput\n                name=\"projects\"\n                full_name=\"Какие проекты вы делали\"\n                icon=\"bi-file-earmark-text\"\n                placeholder={`Что вы можете рассказать о своей практике? \\nВ каких проектах участовали?`}\n                value={projects}\n                startedWriting={startedWriting}\n                setStartedWriting={setStartedWriting}\n                inputChange={inputChange}\n                formErrors={formErrors}\n            />\n\n            <SubmitButton\n                disabled={!isEmpty(formErrors)}\n                submitFunction={submitHandler}\n                isLoading={isLoading}\n            />\n        </div>\n    );\n}\n\nexport default FreelancerProfile;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { check_user } from \"../../../redux/actions/auth\";\nimport { validateRegisterInfo } from \"../../Validate/formValidate\";\nimport isEmpty from \"../../Validate/isEmpty\";\nimport SubmitButton from \"../SubmitButton\";\n\nfunction Form({ formData, setFormData, setLoadProfile }) {\n    const { username, password, password2, userType } = formData;\n    const inputChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(false);\n    const [formErrors, setFormErrors] = useState(null);\n    const [startedWriting, setStartedWriting] = useState({\n        username: false,\n        password: false,\n        password2: false,\n    });\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormErrors(validateRegisterInfo(formData));\n        setStartedWriting({\n            username: true,\n            password: true,\n            password2: true,\n        });\n        if (isEmpty(formErrors)) {\n            dispatch(check_user(username)).then((res) => {\n                setIsLoading(false);\n                if (res == true) {\n                    // console.log(\"Такой пользователь уже существует\");\n                    setFormErrors({\n                        ...formErrors,\n                        username: \"Такой пользователь уже существует\",\n                    });\n                } else if (res == false) {\n                    // console.log(\"Такой пользователь не существует\");\n                    setLoadProfile(true);\n                    setFormErrors(null);\n                }\n            });\n        }\n    };\n    useEffect(() => {\n        setFormErrors(validateRegisterInfo(formData));\n        return () => {\n            setFormErrors(null);\n        };\n    }, [formData, startedWriting]);\n    return (\n        <>\n            <div className=\"mb-4\">\n                <label\n                    htmlFor=\"inputName\"\n                    className=\"form-label text-gray py-0 fw-bold\"\n                >\n                    <i className=\"bi bi-person-circle fs-5 me-2\"></i>\n                    Придумайте имя аккаунту <small>(логин)</small>\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"inputName\"\n                    placeholder=\"Нужно только для входа в аккаунт: adidas_company\"\n                    value={username}\n                    onChange={(e) => {\n                        inputChange(e);\n                        setStartedWriting({\n                            ...startedWriting,\n                            username: true,\n                        });\n                    }}\n                    className={`form-control sm-placeholder ${\n                        startedWriting.username === true &&\n                        (formErrors?.username ? \"is-invalid\" : \"is-valid\")\n                    }`}\n                    style={{ borderRadius: \"7px\" }}\n                    aria-describedby=\"inputName\"\n                    required\n                />\n                <div className=\"invalid-feedback\">{formErrors?.username}</div>\n            </div>\n            <div className=\"mb-3 has-validation\">\n                <label\n                    htmlFor=\"inputPassword1\"\n                    className=\"form-label text-gray fw-bold py-0 \"\n                >\n                    <i className=\"bi bi-unlock-fill me-2 fs-5\"></i>\n                    Придумайте пароль\n                </label>\n                <input\n                    type=\"password\"\n                    className={`form-control ${\n                        startedWriting.password === true &&\n                        (formErrors?.password ? \"is-invalid\" : \"is-valid\")\n                    }`}\n                    style={{ borderRadius: \"7px\" }}\n                    name=\"password\"\n                    value={password}\n                    id=\"inputPassword1\"\n                    onChange={(e) => {\n                        inputChange(e);\n                        setStartedWriting({\n                            ...startedWriting,\n                            password: true,\n                        });\n                    }}\n                    required\n                />\n                <div className=\"invalid-feedback\">{formErrors?.password}</div>\n            </div>\n            <div className=\"mb-3 has-validation\">\n                <label\n                    htmlFor=\"inputPassword2\"\n                    className=\"form-label text-gray fw-bold py-0 \"\n                >\n                    <i className=\"bi bi-lock-fill me-2 fs-5\"></i>\n                    Повторите пароль\n                </label>\n                <input\n                    type=\"password\"\n                    className={`form-control ${\n                        startedWriting.password2 === true &&\n                        (formErrors?.password2 ? \"is-invalid\" : \"is-valid\")\n                    }`}\n                    style={{ borderRadius: \"7px\" }}\n                    name=\"password2\"\n                    value={password2}\n                    id=\"inputPassword2\"\n                    onChange={(e) => {\n                        inputChange(e);\n                        setStartedWriting({\n                            ...startedWriting,\n                            password2: true,\n                        });\n                    }}\n                    required\n                />\n                <div className=\"invalid-feedback\">{formErrors?.password2}</div>\n            </div>\n            <div className=\"mb-3\">\n                <label\n                    htmlFor=\"inputSelect1\"\n                    className=\"form-label text-gray fw-bold py-0 \"\n                >\n                    <i className=\"bi bi-ui-radios me-2 fs-5\"></i>\n                    Выберите тип регистрации\n                </label>\n                <select\n                    onChange={(e) => inputChange(e)}\n                    className=\"form-select\"\n                    name=\"userType\"\n                    required\n                    id=\"inputSelect1\"\n                    value={userType}\n                    name=\"userType\"\n                    style={{ borderRadius: \"7px\" }}\n                    aria-label=\"Default select example\"\n                >\n                    <option value=\"COMPANY\">Компания</option>\n                    <option value=\"FREELANCER\">Фрилансер</option>\n                </select>\n            </div>\n            <SubmitButton\n                disabled={!isEmpty(formErrors)}\n                submitFunction={submitHandler}\n                isLoading={isLoading}\n            />\n        </>\n    );\n}\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ShortFooter from \"../components/Footer/ShortFooter\";\nimport CompanyProfile from \"../components/Register/CompanyProfile/index\";\nimport FreelancerProfile from \"../components/Register/FreelancerProfile\";\nimport Form from \"../components/Register/Form\";\n\nexport default function SignUp() {\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n        userType: \"COMPANY\",\n    });\n    const [loadProfile, setLoadProfile] = useState(false);\n    const { userType } = formData;\n    return (\n        <div className=\"container\">\n            <div className=\"d-flex  flex-column py-3 align-items-start justify-content-md-center align-items-md-center\">\n                <Link to=\"/\" className=\"mx-md-0 mt-2 mb-3 ps-4 ps-md-0\">\n                    <img\n                        style={{ width: \"135px\", height: \"34px\" }}\n                        src={process.env.PUBLIC_URL + \"/images/big-logo.svg\"}\n                        alt=\"Logo\"\n                    />\n                </Link>\n                <div\n                    className=\"h2 py-2 ps-4 ps-md-0\"\n                    style={{ fontWeight: 500, fontSize: \"32px\" }}\n                >\n                    Регистрация\n                </div>\n                <div className=\"p ps-4 ps-md-0\">\n                    Добейтесь профессионального успеха\n                </div>\n\n                <form\n                    className=\"bg-white col-12 p-4 col-md-9 col-lg-6 my-4\"\n                    className=\"bg-white col-12 p-4 col-md-9 col-lg-6 my-4\"\n                    style={{ borderRadius: \"10px\" }}\n                >\n                    {!loadProfile && (\n                        <Form\n                            setFormData={setFormData}\n                            formData={formData}\n                            setLoadProfile={setLoadProfile}\n                        />\n                    )}\n                    {loadProfile && (\n                        <h3 className=\"text-center mb-4\">Профиль</h3>\n                    )}\n                    {loadProfile &&\n                        (userType === \"COMPANY\" ? (\n                            <CompanyProfile userData={formData} />\n                        ) : (\n                            <FreelancerProfile userData={formData} />\n                        ))}\n\n                    <div className=\"p my-3 text-center\">\n                        Уже зарегистрированы в LinkedIn?{\" \"}\n                        <Link\n                            to=\"/login\"\n                            className=\"text-decoration-none fw-bold\"\n                        >\n                            Войти\n                        </Link>\n                    </div>\n                </form>\n                <ShortFooter />\n            </div>\n        </div>\n    );\n}\n","export default (date) => {\n    let convert = new Date(date);\n    var yyyy = convert.getFullYear().toString();\n    var mm = (convert.getMonth() + 1).toString();\n    var dd = convert.getDate().toString();\n\n    var mmChars = mm.split(\"\");\n    var ddChars = dd.split(\"\");\n    return (\n        yyyy +\n        \"-\" +\n        (mmChars[1] ? mm : \"0\" + mmChars[0]) +\n        \"-\" +\n        (ddChars[1] ? dd : \"0\" + ddChars[0])\n    );\n};\n\nexport const getUpdatedTime = (updated) => {\n    let today = new Date();\n    let release = new Date(updated);\n    const diffTime = Math.abs(today - release);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n};\n\nexport const getAge = (dateString) => {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n    }\n    return age;\n};\n","import {\n    LOAD_JOBS,\n    LOAD_MORE_JOBS,\n    LOAD_FREELANCERS,\n    LOAD_MORE_FREELANCERS,\n} from \"../types/types\";\n\nimport errors from \"./../messages/errors.json\";\nimport success from \"./../messages/success.json\";\nimport axios from \"axios\";\nimport { authConfig, config } from \"../utils/config\";\n\nexport const load_jobs = (conf, oldJobs) => async (dispatch) => {\n    // console.log(\"Loading jobs\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/jobs/?${conf}`,\n            config\n        );\n        if (Array.isArray(oldJobs)) {\n            dispatch({\n                type: LOAD_MORE_JOBS,\n                old_jobs: oldJobs,\n                new_jobs: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        } else {\n            dispatch({\n                type: LOAD_JOBS,\n                payload: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        }\n\n        return res.data.results;\n    } catch (error) {\n        return;\n        // console.log(\"Not authenticated\");\n    }\n};\nexport const load_freelancers = (conf, oldData) => async (dispatch) => {\n    console.log(\"Loading freelancers\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/freelancer/?${conf}`,\n            config\n        );\n        if (Array.isArray(oldData)) {\n            dispatch({\n                type: LOAD_MORE_FREELANCERS,\n                old_data: oldData,\n                new_data: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        } else {\n            dispatch({\n                type: LOAD_FREELANCERS,\n                payload: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        }\n\n        return res.data.results;\n    } catch (error) {\n        return error;\n        // console.log(\"Not authenticated\");\n    }\n};\n\nexport const get_profession = (id) => async (dispatch) => {\n    console.log(\"Loading profession\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/professions/${id}/`,\n            config\n        );\n\n        return res.data;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\n\nexport const search_professions = (searchValue) => async (dispatch) => {\n    console.log(\"Searching professions\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/professions/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\nexport const search_company = (searchValue) => async (dispatch) => {\n    console.log(\"Searching companies\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/search/company/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\nexport const search_freelancer = (searchValue) => async (dispatch) => {\n    console.log(\"Searching freelancers\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/search/freelancer/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\n\nexport const load_job = (pk) => async (dispatch) => {\n    console.log(\"Loading job\", pk);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/jobs/${pk}/`,\n            config\n        );\n        return res.data;\n    } catch (error) {\n        // console.log(\"Not authenticated\");\n    }\n};\nexport const post_job = (jobData, user) => async (dispatch) => {\n    console.log(\"Post job\", jobData, user);\n    if (localStorage.getItem(\"access\")) {\n        const body = JSON.stringify({\n            name: jobData.name,\n            profession: jobData.profession,\n            city: jobData.city,\n            min_salary: jobData.min_salary,\n            max_salary: jobData.max_salary,\n            after_meeting: jobData.after_meeting,\n            min_experience: jobData.min_experience,\n            max_experience: jobData.max_experience,\n            work_time: jobData.work_time,\n            skills: jobData.skills,\n            description: jobData.description,\n        });\n        const authConfig = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n                Accept: \"application/json\",\n            },\n        };\n        try {\n            const res = await axios.post(\n                `${process.env.REACT_APP_API_VERSION_URL}/jobs/`,\n                body,\n                authConfig\n            );\n            console.log(\"Sended\", res.data);\n            return res;\n        } catch (error) {\n            return error;\n        }\n    } else {\n        console.log(\"No access token\");\n    }\n};\n\nexport const retrieve_freelancer = (pk) => async (dispatch) => {\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/freelancer/${pk}/`,\n            config\n        );\n        return res.data;\n        // console.log.log(\"LOADED FREELANCER: \", res);\n    } catch (error) {\n        // console.log(\"Not authenticated\");\n    }\n};\n","import React from \"react\";\n\nfunction SubmitButton({\n    disabled,\n    name = \"Зарегистрироваться\",\n    isLoading,\n    submitFunction,\n}) {\n    return (\n        <button\n            type=\"button\"\n            disabled={disabled}\n            onClick={(e) => submitFunction(e)}\n            className=\"btn blue-btn my-2 text-center w-100 \"\n        >\n            {isLoading ? (\n                <div className=\"spinner-border text-white\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            ) : (\n                <>{name}</>\n            )}\n        </button>\n    );\n}\n\nexport default SubmitButton;\n","import formErrors from \"../../redux/messages/formErrors.json\";\n\nexport function validateRegisterInfo(values) {\n    let errors = {};\n    if (!values.username.trim()) {\n        errors.username = formErrors.usernameError;\n    }\n\n    if (!values.password.trim()) {\n        errors.password = formErrors.passwordError;\n    }\n    if (values.password !== values?.password2) {\n        errors.password2 = formErrors.password2passwordError;\n    }\n    if (!values.password2.trim()) {\n        errors.password2 = formErrors.password2Error;\n    }\n\n    return errors;\n}\n\n// Сompany Signup\nexport function validateRegisterCompanyProfile(values) {\n    let errors = {};\n    // console.log(\"Validating\", values);\n\n    if (!values?.fullName?.trim()) {\n        errors.fullName = formErrors.companyName;\n    }\n\n    if (!values?.compInfo?.trim()) {\n        errors.compInfo = formErrors.usernameError;\n    }\n\n    if (!values?.address?.trim()) {\n        errors.address = formErrors.usernameError;\n    }\n\n    if (values?.phone_number) {\n        if (\n            (values?.phone_number >= 99361000000 &&\n                values?.phone_number <= 99365999999) ||\n            (values?.phone_number >= 99312000000 &&\n                values.phone_number <= 99312999999)\n        ) {\n            // pass\n        } else {\n            errors.phone_number = formErrors.phoneNumber2;\n        }\n    } else {\n        errors.phone_number = formErrors.phoneNumber;\n    }\n\n    if (!values.image.raw) {\n        errors.image = \"\";\n    }\n\n    return errors;\n}\n\n// Freelancer Signup\nexport function validateRegisterFreelanacerProfile(values) {\n    let errors = {};\n    // console.log(\"Validating\", values);\n\n    if (!values?.fullName.trim()) {\n        errors.fullName = formErrors.freelancerName;\n    }\n\n    if (!values.experience.trim()) {\n        errors.experience = formErrors.freelancerinput;\n    }\n    if (!values.knowledge.trim()) {\n        errors.knowledge = formErrors.freelancerinput;\n    }\n    if (!values.projects.trim()) {\n        errors.projects = formErrors.freelancerinput;\n    }\n    if (!values.profesion) {\n        errors.profession = formErrors.professionchoose;\n    }\n\n    if (values.phone_number) {\n        if (\n            (values?.phone_number >= 99361000000 &&\n                values?.phone_number <= 99365999999) ||\n            (values?.phone_number >= 99312000000 &&\n                values.phone_number <= 99312999999)\n        ) {\n            // pass\n        } else {\n            errors.phone_number = formErrors.phoneNumber2;\n        }\n    } else {\n        errors.phone_number = formErrors.phoneNumber;\n    }\n\n    if (!values.image.raw) {\n        errors.image = \"Error\";\n    }\n\n    return errors;\n}\n\n// Job Post\nexport function validateJobPost(values) {\n    let errors = {};\n    console.log(\"Validating\", values);\n\n    // NAME\n    if (!values.name.trim()) {\n        errors.name = formErrors.freelancerinput;\n    }\n    // PROFESSION\n    if (!values.profession) {\n        errors.compInfo = formErrors.professionchoose;\n    }\n\n    // SALARY\n    if (values.after_meeting) {\n        // pass\n    } else {\n        if (values.min_salary >= values.max_salary) {\n            errors.max_salary = formErrors.freelancermaxcost;\n        }\n\n        if (values.min_salary < 0) {\n            errors.min_salary = formErrors.freelancercost;\n        }\n        if (values.max_salary < 0) {\n            errors.max_salary = formErrors.freelancercost;\n        }\n    }\n    // EXPERIENCE\n    if (values.min_experience >= values.max_experience) {\n        errors.max_experience = formErrors.freelancermaxcost;\n    }\n\n    if (values.min_experience < 0) {\n        errors.min_experience = formErrors.freelancercost;\n    }\n    if (values.max_experience < 0) {\n        errors.max_experience = formErrors.freelancercost;\n    }\n\n    // WORK TIME\n    if (values.work_time <= 0 || values.work_time > 24) {\n        errors.work_time = formErrors.notcorrectfield;\n    }\n\n    // SKILLS\n    if (!values.skills.trim()) {\n        errors.skills = formErrors.freelancerinput;\n    }\n    // DESCRIPTION\n    if (!values.description.trim()) {\n        errors.description = formErrors.freelancerinput;\n    }\n\n    return errors;\n}\n","// Speed up calls to hasOwnProperty\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default function isEmpty(obj) {\n\t// null and undefined are \"empty\"\n\tif (obj == null) return true;\n\n\t// Assume if it has a length property with a non-zero value\n\t// that that property is correct.\n\tif (obj.length > 0) return false;\n\tif (obj.length === 0) return true;\n\n\t// If it isn't an object at this point\n\t// it is empty, but it can't be anything *but* empty\n\t// Is it empty?  Depends on your application.\n\tif (typeof obj !== \"object\") return true;\n\n\t// Otherwise, does it have any properties of its own?\n\t// Note that this doesn't handle\n\t// toString and valueOf enumeration bugs in IE < 9\n\tfor (var key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) return false;\n\t}\n\n\treturn true;\n}\n","import React from \"react\";\n\nfunction SelectInput({ name, full_name, icon, value, inputChange, options }) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <select\n                onChange={(e) => {\n                    inputChange(e);\n                }}\n                className=\"form-select\"\n                name={name}\n                role=\"button\"\n                required\n                id={name}\n                value={value}\n                style={{ borderRadius: \"7px\" }}\n                aria-label=\"Default select example\"\n            >\n                {Array.isArray(options) &&\n                    options.map((option) => (\n                        <option value={option.value}>{option.name}</option>\n                    ))}\n            </select>\n        </div>\n    );\n}\n\nexport default SelectInput;\n","import React from \"react\";\n\nfunction TextAreaInput({\n    name,\n    full_name,\n    icon,\n    placeholder,\n    value,\n    startedWriting,\n    setStartedWriting,\n    inputChange,\n    formErrors,\n}) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <textarea\n                name={name}\n                id={name}\n                placeholder={placeholder && placeholder}\n                value={value}\n                onChange={(e) => {\n                    inputChange(e);\n                    setStartedWriting({\n                        ...startedWriting,\n                        [name]: true,\n                    });\n                }}\n                className={`form-control sm-placeholder ${\n                    startedWriting?.[name] === true &&\n                    (formErrors?.[name] ? \"is-invalid\" : \"is-valid\")\n                }`}\n                style={{ borderRadius: \"7px\" }}\n                aria-describedby={name}\n                required\n            ></textarea>\n            <div class=\"invalid-feedback\">{formErrors?.[name]}</div>\n        </div>\n    );\n}\n\nexport default TextAreaInput;\n","import React from \"react\";\n\nfunction TextInput({\n    name,\n    full_name,\n    icon,\n    placeholder,\n    disabled,\n    value,\n    type = \"text\",\n    startedWriting,\n    setStartedWriting,\n    inputChange,\n    formErrors,\n    max_length,\n    min_length,\n}) {\n    return (\n        <div style={{ marginBottom: \"2rem\" }}>\n            <label\n                htmlFor={name}\n                className=\"form-label text-gray py-0 fw-bold fs-6 d-flex align-items-center\"\n            >\n                <i class={`bi ${icon} fs-5 me-2`}></i>\n                {full_name}\n            </label>\n            <input\n                type={type}\n                name={name}\n                id={name}\n                disabled={disabled && disabled}\n                placeholder={placeholder && placeholder}\n                value={value}\n                onChange={(e) => {\n                    inputChange(e);\n                    setStartedWriting({\n                        ...startedWriting,\n                        [name]: true,\n                    });\n                }}\n                className={`form-control sm-placeholder ${\n                    startedWriting?.[name] === true &&\n                    (formErrors?.[name] ? \"is-invalid\" : \"is-valid\")\n                }`}\n                style={{ borderRadius: \"7px\" }}\n                aria-describedby={name}\n                max={max_length && max_length}\n                min={min_length && min_length}\n                required\n            />\n            <div class=\"invalid-feedback\">{formErrors?.[name]}</div>\n        </div>\n    );\n}\n\nexport default TextInput;\n"],"sourceRoot":""}