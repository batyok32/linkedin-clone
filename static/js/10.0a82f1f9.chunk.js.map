{"version":3,"sources":["utils/cities.jsx","components/Form/DropSelect.jsx","components/Form/StandartDropSelect.jsx","components/Jobs/JobPagination.jsx","redux/selectors/main.js","utils/jobsConfig.jsx","components/Form/DropJobSalaryRange.jsx","components/Form/JobFilterRow.jsx","components/Jobs/JobModal.jsx","components/Jobs/JobItem2.jsx","components/Jobs/JobsMap.jsx","containers/Jobs.jsx","utils/convertDate.jsx","redux/actions/main.js"],"names":["citiesArray","name","value","DropSelect","clickFun","optionsFun","defaultOpt","resetFun","useState","choosedItem","setChoosedItem","isLoading","setIsLoading","opts","setOptions","searchValue","setSearchValue","sawDefaultOpt","setSawDefaultOpt","useEffect","length","style","color","className","role","borderRadius","outline","boxShadow","class","width","background","type","placeholder","onChange","e","target","required","overflowY","maxHeight","onClick","fontWeight","Array","isArray","map","option","StandartDropSelect","options","noSearch","minWidth","filter","toLowerCase","startsWith","JobPagination","jobsLength","setLoadMore","fontSize","selectMainData","state","main","selectJobs","createSelector","mainData","jobs","selectFreelancers","freelancers","getJobsConfig","filterData","loadMore","profession","city","company","minSalary","maxSalary","date","order","config","console","log","getFreelancersConfig","full_name","DropJobSalaryRange","res","min","max","values","setValues","startedWorking","setStartedWorking","errors","setErrors","htmlFor","id","Number","for","JobFilterRow","setClickSearch","setFilterData","defaultProfession","dispatch","useDispatch","response","search_professions","then","opt","push","search_company","user","JobModal","job","closeModalRef","jobItem","setJobitem","jobCompany","setJobCompany","history","useHistory","sendMe","lin","a","current","click","load_job","load_stranger_company","result","tabIndex","border","right","top","zIndex","ref","after_meeting","min_salary","max_salary","min_experience","max_experience","getUpdatedTime","updated","work_time","slug","company_type","address","phone_number","description","skills","JobItem2","height","backgroundImage","process","logo","to","JobsMap","setModalItem","setClickModalItem","mapState","next","count","Jobs","clickedSearchBtn","useSelector","setDefaultProfession","useParams","job_slug","job_id","openModalRef","React","createRef","modalItem","clickedModalItem","loadJobsFun","load_jobs","window","scrollTo","behavior","get_profession","convert","Date","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","mmChars","split","ddChars","today","release","diffTime","Math","abs","ceil","getAge","dateString","birthDate","age","m","conf","oldJobs","axios","get","LOAD_MORE_JOBS","old_jobs","new_jobs","data","results","prev","LOAD_JOBS","payload","load_freelancers","oldData","LOAD_MORE_FREELANCERS","old_data","new_data","LOAD_FREELANCERS","search_freelancer","pk","post_job","jobData","localStorage","getItem","body","JSON","stringify","authConfig","headers","Authorization","Accept","post","retrieve_freelancer"],"mappings":"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","file":"static/js/10.0a82f1f9.chunk.js","sourcesContent":["export const citiesArray = [\n    { name: \"Ашхабад\", value: \"Ag\" },\n    { name: \"Ахал\", value: \"Ah\" },\n    { name: \"Балканы\", value: \"Bl\" },\n    { name: \"Мары\", value: \"Mr\" },\n    { name: \"Дашогуз\", value: \"Dz\" },\n    { name: \"Лебап\", value: \"Lb\" },\n];\n","import React, { useEffect, useState } from \"react\";\n\nfunction DropSelect({ name, clickFun, optionsFun, defaultOpt, resetFun }) {\n    const [choosedItem, setChoosedItem] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [opts, setOptions] = useState([]);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [sawDefaultOpt, setSawDefaultOpt] = useState(false);\n    useEffect(() => {\n        if (searchValue.length >= 2) {\n            setIsLoading(true);\n            optionsFun(searchValue, setOptions, setIsLoading);\n        }\n    }, [searchValue]);\n    useEffect(() => {\n        // Used for starting if it has default value\n        if (defaultOpt && !sawDefaultOpt) {\n            defaultOpt(setChoosedItem);\n            setSawDefaultOpt(true);\n        }\n    }, [defaultOpt]);\n    return (\n        <div\n            style={{ color: \"rgb(51, 51, 51)\" }}\n            className=\"dropdown position-relative my-2 \"\n        >\n            <button\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n                style={{\n                    borderRadius: \"30px\",\n                    outline: \"none\",\n                    boxShadow: \"none\",\n                }}\n                className=\"w-100 btn px-3 d-flex justify-content-between align-items-center border dropdown-toggle truncate-overflow-1\"\n            >\n                {choosedItem?.name ? choosedItem.name : name}\n                <i class=\"ms-2 bi bi-chevron-down fs-14\"></i>\n            </button>\n            <ul\n                class=\"dropdown-menu p-0 mt-1\"\n                style={{\n                    borderRadius: \"10px\",\n                    width: \"90%\",\n                }}\n            >\n                <div\n                    className=\"my-3 mx-auto d-flex px-2 align-items-center\"\n                    style={{\n                        borderRadius: \"10px\",\n                        width: \"90%\",\n                        background: \"rgba(202,204,206, 0.4)\",\n                    }}\n                >\n                    <i class=\"bi bi-search text-muted\"></i>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Поиск...\"\n                        value={searchValue}\n                        onChange={(e) => setSearchValue(e.target.value)}\n                        className=\"form-control border-0  bg-transparent sm-placeholder\"\n                        style={{\n                            outline: \"none\",\n                            boxShadow: \"none\",\n                        }}\n                        required\n                    />\n                </div>\n                {isLoading && (\n                    <div className=\"text-center my-2 text-primary\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    style={{\n                        overflowY: \"scroll\",\n                        maxHeight: \"150px\",\n                    }}\n                >\n                    {choosedItem ? (\n                        <div className=\"px-2\">\n                            <div\n                                onClick={() => {\n                                    setChoosedItem(null);\n                                    resetFun();\n                                }}\n                                role=\"button\"\n                                style={{\n                                    borderRadius: \"10px\",\n                                    fontWeight: \"normal\",\n                                }}\n                                className=\"dropdown-item truncate-overflow-1 blue-btn justify-content-between align-items-center my-2 py-2 d-flex\"\n                            >\n                                <span>{choosedItem.name}</span>\n                                <i class=\"bi bi-x-lg\"></i>\n                            </div>\n                        </div>\n                    ) : (\n                        \"\"\n                    )}\n                    {Array.isArray(opts) &&\n                        opts.length > 0 &&\n                        opts.map((option) => {\n                            return (\n                                <div\n                                    onClick={() => {\n                                        setChoosedItem({ name: option.name });\n                                        clickFun(option.value);\n                                    }}\n                                    role=\"button\"\n                                    className=\"dropdown-item py-2\"\n                                >\n                                    {option.name}\n                                </div>\n                            );\n                        })}\n                </div>\n            </ul>\n        </div>\n    );\n}\n\nexport default DropSelect;\n","import React, { useState } from \"react\";\n\nfunction StandartDropSelect({ name, options, clickFun, noSearch, resetFun }) {\n    const [choosedItem, setChoosedItem] = useState(null);\n    const [searchValue, setSearchValue] = useState(\"\");\n    return (\n        <div\n            style={{ color: \"rgb(51, 51, 51)\" }}\n            className=\"dropdown position-relative my-2 \"\n        >\n            <button\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n                style={{\n                    borderRadius: \"30px\",\n                    outline: \"none\",\n                    boxShadow: \"none\",\n                }}\n                className=\"w-100 btn px-3 d-flex justify-content-between align-items-center border dropdown-toggle truncate-overflow-1\"\n            >\n                {choosedItem?.name ? choosedItem.name : name}\n                <i class=\"ms-2 bi bi-chevron-down fs-14\"></i>\n            </button>\n            <ul\n                class=\"dropdown-menu p-0 mt-1\"\n                style={{\n                    borderRadius: \"10px\",\n                    minWidth: \"200px\",\n                }}\n            >\n                {noSearch ? (\n                    <div className=\"my-2\"></div>\n                ) : (\n                    <div\n                        className=\"my-3 mx-auto d-flex px-2 align-items-center\"\n                        style={{\n                            borderRadius: \"10px\",\n                            width: \"90%\",\n                            background: \"rgba(202,204,206, 0.4)\",\n                        }}\n                    >\n                        <i class=\"bi bi-search text-muted\"></i>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Поиск...\"\n                            value={searchValue}\n                            onChange={(e) => setSearchValue(e.target.value)}\n                            className=\"form-control border-0  bg-transparent sm-placeholder\"\n                            style={{\n                                outline: \"none\",\n                                boxShadow: \"none\",\n                            }}\n                            required\n                        />\n                    </div>\n                )}\n\n                <div\n                    style={{\n                        overflowY: \"scroll\",\n                        maxHeight: \"150px\",\n                    }}\n                >\n                    {choosedItem ? (\n                        <div className=\"px-2\">\n                            <div\n                                onClick={() => {\n                                    setChoosedItem(null);\n                                    resetFun();\n                                }}\n                                role=\"button\"\n                                style={{\n                                    borderRadius: \"10px\",\n                                    fontWeight: \"normal\",\n                                }}\n                                className=\"dropdown-item truncate-overflow-1 blue-btn justify-content-between align-items-center my-2 py-2 d-flex\"\n                            >\n                                <span>{choosedItem.name}</span>\n                                <i class=\"bi bi-x-lg\"></i>\n                            </div>\n                        </div>\n                    ) : (\n                        \"\"\n                    )}\n                    {Array.isArray(options) &&\n                        options.length > 0 &&\n                        options\n                            .filter((option) =>\n                                option.name\n                                    .toLowerCase()\n                                    .startsWith(searchValue.toLowerCase())\n                            )\n                            .map((option) => {\n                                return (\n                                    <div\n                                        onClick={() => {\n                                            setChoosedItem({\n                                                name: option.name,\n                                            });\n                                            clickFun(option.value);\n                                        }}\n                                        role=\"button\"\n                                        className=\"dropdown-item py-2\"\n                                    >\n                                        {option.name}\n                                    </div>\n                                );\n                            })}\n                </div>\n            </ul>\n        </div>\n    );\n}\n\nexport default StandartDropSelect;\n","import React, { useState } from \"react\";\n\nfunction JobPagination({ jobsLength, setLoadMore, isLoading }) {\n    const handleLoadMore = () => {\n        setLoadMore(jobsLength);\n    };\n    return (\n        <div className=\"row my-5 justify-content-center\">\n            <button\n                className=\"btn join-btn mx-auto py-2\"\n                style={{\n                    width: \"400px\",\n                    borderRadius: \"30px\",\n                    fontWeight: 600,\n                    fontSize: \"16px\",\n                }}\n                onClick={() => handleLoadMore()}\n            >\n                {isLoading ? (\n                    <div class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                ) : (\n                    \"Загрузить ещё...\"\n                )}\n            </button>\n        </div>\n    );\n}\n\nexport default JobPagination;\n","import { createSelector } from \"reselect\";\n\nexport const selectMainData = (state) => state.main;\n\nexport const selectJobs = createSelector(\n    [selectMainData],\n    (mainData) => mainData.jobs\n);\n\nexport const selectFreelancers = createSelector(\n    [selectMainData],\n    (mainData) => mainData.freelancers\n);\n","export const getJobsConfig = (filterData, loadMore) => {\n    const { profession, city, company, minSalary, maxSalary, date, order } =\n        filterData;\n    let config = \"\";\n    console.log(\"FilterData\", filterData);\n    if (profession && profession >= 0) {\n        let oldconf = config;\n        config = `${oldconf}profession=${profession}&&`;\n    }\n    if (city) {\n        let oldconf = config;\n        config = `${oldconf}city=${city}&&`;\n    }\n    if (company) {\n        let oldconf = config;\n        config = `${oldconf}company=${company}&&`;\n    }\n    if (minSalary) {\n        let oldconf = config;\n        config = `${oldconf}min_salary=${minSalary}&&`;\n    }\n    if (maxSalary) {\n        let oldconf = config;\n        config = `${oldconf}max_salary=${maxSalary}&&`;\n    }\n    if (date) {\n        let oldconf = config;\n        config = `${oldconf}date=${date}&&`;\n    }\n    if (order) {\n        let oldconf = config;\n        config = `${oldconf}o=${order}&&`;\n    }\n    if (loadMore) {\n        let oldconf = config;\n        config = `${oldconf}limit=20&&offset=${loadMore}`;\n    }\n    console.log(\"CONFIG\", config);\n    return config;\n};\n\nexport const getFreelancersConfig = (filterData, loadMore) => {\n    const { profession, city, full_name, date, order } = filterData;\n    let config = \"\";\n    console.log(\"FilterData\", filterData);\n    if (profession && profession >= 0) {\n        let oldconf = config;\n        config = `${oldconf}profession=${profession}&&`;\n    }\n    if (city) {\n        let oldconf = config;\n        config = `${oldconf}city=${city}&&`;\n    }\n    if (full_name) {\n        let oldconf = config;\n        config = `${oldconf}full_name=${full_name}&&`;\n    }\n\n    if (date) {\n        let oldconf = config;\n        config = `${oldconf}date=${date}&&`;\n    }\n    if (order) {\n        let oldconf = config;\n        config = `${oldconf}o=${order}&&`;\n    }\n    if (loadMore) {\n        let oldconf = config;\n        config = `${oldconf}limit=20&&offset=${loadMore}`;\n    }\n    console.log(\"CONFIG\", config);\n    return config;\n};\n","import React, { useEffect, useState } from \"react\";\n\nfunction DropJobSalaryRange({ clickFun, res }) {\n    const [values, setValues] = useState({\n        min: 0,\n        max: 0,\n    });\n    const [startedWorking, setStartedWorking] = useState(false);\n    const [errors, setErrors] = useState(null);\n    useEffect(() => {\n        if (startedWorking) {\n            if (values.min === 0 && values.max === 0) {\n                setErrors(null);\n                clickFun(values.min, values.max);\n            } else {\n                if (values.min >= values.max) {\n                    setErrors(\n                        \"Минимальная зарплата должна быть меньше чем максимальная!\"\n                    );\n                } else if (values.min < 0 || values.max < 0) {\n                    setErrors(\"Значение не может быть меньше нуля!\");\n                } else {\n                    setErrors(null);\n                    clickFun(values.min, values.max);\n                }\n            }\n        }\n    }, [values]);\n    return (\n        <div\n            style={{ color: \"rgb(51, 51, 51)\" }}\n            className=\"dropdown position-relative my-2 \"\n        >\n            <button\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n                style={{\n                    borderRadius: \"30px\",\n                    outline: \"none\",\n                    boxShadow: \"none\",\n                }}\n                className=\"w-100 btn px-3 d-flex justify-content-between align-items-center border dropdown-toggle truncate-overflow-1\"\n            >\n                Зарплата\n                <i class=\"ms-2 bi bi-chevron-down fs-14\"></i>\n            </button>\n            <ul\n                class=\"dropdown-menu mx-auto p-0 mt-1\"\n                style={{\n                    borderRadius: \"10px\",\n                    width: \"90%\",\n                }}\n            >\n                <div className=\"my-3  d-flex flex-column px-2\">\n                    {errors ? (\n                        <div class=\"px-3 text-danger fs-14 py-1 text-center\">\n                            {errors}\n                        </div>\n                    ) : (\n                        \"\"\n                    )}\n                    <div class=\"px-3  fs-14 py-1 text-center\">{res}</div>\n                    <label htmlFor=\"min-range\" class=\"form-label text-center\">\n                        Минимальная зарплата\n                    </label>\n                    <div className=\"p-1\">\n                        <input\n                            type=\"number\"\n                            name=\"range\"\n                            min={1}\n                            max={values.max - 1}\n                            id=\"min-range\"\n                            value={values.min}\n                            onChange={(e) => {\n                                setStartedWorking(true);\n                                setValues({\n                                    ...values,\n                                    min: Number(e.target.value),\n                                });\n                            }}\n                            className={`form-control px-2 mx-auto  py-1 sm-placeholder `}\n                            style={{\n                                borderRadius: \"7px\",\n                                outline: \"none\",\n                                boxShadow: \"none\",\n                                width: \"90%\",\n                            }}\n                            aria-describedby=\"min-range\"\n                            required\n                        />\n                    </div>\n                </div>\n                <div className=\"my-3  d-flex flex-column px-2\">\n                    <label for=\"customRange1\" class=\"form-label text-center\">\n                        Максимальная зарплата\n                    </label>\n                    <div className=\"p-1\">\n                        <input\n                            type=\"number\"\n                            value={values.max}\n                            min={values.min + 1}\n                            onChange={(e) => {\n                                setStartedWorking(true);\n                                setValues({\n                                    ...values,\n                                    max: Number(e.target.value),\n                                });\n                            }}\n                            className={`form-control px-2 mx-auto  py-1 sm-placeholder `}\n                            style={{\n                                borderRadius: \"7px\",\n                                outline: \"none\",\n                                boxShadow: \"none\",\n                                width: \"90%\",\n                            }}\n                        />\n                    </div>\n                </div>\n            </ul>\n        </div>\n    );\n}\n\nexport default DropJobSalaryRange;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { search_company, search_professions } from \"../../redux/actions/main\";\nimport { citiesArray } from \"../../utils/cities\";\nimport DropJobSalaryRange from \"./DropJobSalaryRange\";\nimport DropSelect from \"./DropSelect\";\nimport StandartDropSelect from \"./StandartDropSelect\";\n\nfunction JobFilterRow({\n    isLoading,\n    setClickSearch,\n    filterData,\n    setFilterData,\n    defaultProfession,\n}) {\n    const dispatch = useDispatch();\n\n    return (\n        <div\n            className=\"bg-white d-flex p-4 mt-3 flex-wrap\"\n            style={{\n                boxShadow: \"0px 4px 24px -10px rgba(124,124,124,0.88)\",\n                borderRadius: \"10px\",\n            }}\n        >\n            <div className=\"col mx-2 row row-cols-1 row-cols-md-2 row-cols-lg-4 justify-content-center align-items-center\">\n                <DropSelect\n                    name=\"Профессия\"\n                    // When input value clicked\n                    clickFun={(value) =>\n                        setFilterData({ ...filterData, profession: value })\n                    }\n                    // Search in professions\n                    optionsFun={(value, setOptions, setIsLoading) => {\n                        let response = [];\n                        dispatch(search_professions(value)).then((res) => {\n                            if (Array.isArray(res) && res.length > 0) {\n                                res.map((opt) =>\n                                    // Creating new array\n                                    response.push({\n                                        name: opt.name,\n                                        value: opt.id,\n                                    })\n                                );\n                            }\n                            setOptions(response);\n                            setIsLoading(false);\n                        });\n                    }}\n                    // Used for starting if url has profession\n                    defaultOpt={\n                        defaultProfession\n                            ? (setChoosedItem) => {\n                                  setChoosedItem({\n                                      name: defaultProfession?.name,\n                                  });\n                              }\n                            : null\n                    }\n                    resetFun={() => {\n                        setFilterData({ ...filterData, profession: null });\n                    }}\n                />\n                <StandartDropSelect\n                    name=\"Место\"\n                    noSearch={true}\n                    clickFun={(value) =>\n                        setFilterData({ ...filterData, city: value })\n                    }\n                    options={citiesArray}\n                    resetFun={() => {\n                        setFilterData({ ...filterData, city: null });\n                    }}\n                />\n                <DropSelect\n                    name=\"Компания\"\n                    clickFun={(value) =>\n                        setFilterData({ ...filterData, company: value })\n                    }\n                    optionsFun={(value, setOptions, setIsLoading) => {\n                        let response = [];\n                        dispatch(search_company(value)).then((res) => {\n                            if (Array.isArray(res) && res.length > 0) {\n                                res.map((opt) =>\n                                    response.push({\n                                        name: opt.full_name,\n                                        value: opt.user,\n                                    })\n                                );\n                            }\n                            setOptions(response);\n                            setIsLoading(false);\n                        });\n                    }}\n                    resetFun={() => {\n                        setFilterData({ ...filterData, company: null });\n                    }}\n                />\n                <DropJobSalaryRange\n                    name=\"Зарплата\"\n                    clickFun={(min, max) => {\n                        if (max === 0 || min === 0) {\n                            if (max === 0 && min === 0) {\n                                setFilterData({\n                                    ...filterData,\n                                    minSalary: null,\n                                    maxSalary: null,\n                                });\n                            } else if (max === 0) {\n                                setFilterData({\n                                    ...filterData,\n                                    minSalary: min,\n                                    maxSalary: null,\n                                });\n                            } else if (min === 0) {\n                                setFilterData({\n                                    ...filterData,\n                                    minSalary: null,\n                                    maxSalary: max,\n                                });\n                            }\n                        } else {\n                            setFilterData({\n                                ...filterData,\n                                minSalary: min,\n                                maxSalary: max,\n                            });\n                        }\n                    }}\n                    res={`${\n                        filterData?.minSalary ? filterData?.minSalary : \"0\"\n                    } - ${filterData?.maxSalary ? filterData?.maxSalary : \"0\"}`}\n                />\n                <StandartDropSelect\n                    name=\"Дата\"\n                    clickFun={(value) =>\n                        setFilterData({ ...filterData, date: value })\n                    }\n                    noSearch={true}\n                    options={[\n                        { name: \"1 - Сегодня\", value: \"today\" },\n                        { name: \"7 - Неделю назад\", value: \"week\" },\n                        { name: \"30 - Месяц назад\", value: \"month\" },\n                        { name: \"365 - Год назад\", value: \"year\" },\n                    ]}\n                    resetFun={() => {\n                        setFilterData({ ...filterData, date: null });\n                    }}\n                />\n                <StandartDropSelect\n                    name=\"Порядок по ...\"\n                    clickFun={(value) =>\n                        setFilterData({ ...filterData, order: value })\n                    }\n                    noSearch={true}\n                    options={[\n                        { name: \"По дате - сначала новые\", value: \"-updated\" },\n                        { name: \"По дате - сначала старые\", value: \"updated\" },\n                        {\n                            name: \"По зарплате - сначала большие\",\n                            value: \"-salary\",\n                        },\n                        {\n                            name: \"По зарплате - сначала маленькие\",\n                            value: \"salary\",\n                        },\n                    ]}\n                    resetFun={() => {\n                        setFilterData({ ...filterData, order: null });\n                    }}\n                />\n            </div>\n            <div className=\"col-12 mx-auto d-flex justify-content-center mt-3 align-items-center\">\n                <div className=\"d-flex justify-content-center\">\n                    <button\n                        type=\"submit\"\n                        onClick={() => setClickSearch(true)}\n                        className=\"btn blue-btn btn-filter-width text-center \"\n                    >\n                        {isLoading ? (\n                            <div class=\"spinner-border\" role=\"status\">\n                                <span class=\"visually-hidden\">Loading...</span>\n                            </div>\n                        ) : (\n                            <>Поиск</>\n                        )}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default JobFilterRow;\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { load_job } from \"../../redux/actions/main\";\nimport { useDispatch } from \"react-redux\";\nimport { getUpdatedTime } from \"../../utils/convertDate\";\nimport { load_stranger_company } from \"../../redux/actions/auth\";\n\nfunction JobModal({ job, closeModalRef }) {\n    const [jobItem, setJobitem] = useState(null);\n    const [jobCompany, setJobCompany] = useState(null);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const sendMe = async (lin) => {\n        console.log(\"Sending to \", lin, jobCompany);\n        await closeModalRef.current.click();\n        history.push(lin);\n    };\n\n    useEffect(() => {\n        if (job) {\n            dispatch(load_job(job?.id)).then((res) => {\n                if (res) {\n                    setJobitem(res);\n                    dispatch(load_stranger_company(res?.company)).then(\n                        (result) => {\n                            setJobCompany(result);\n                        }\n                    );\n                }\n            });\n        }\n    }, [job]);\n\n    return (\n        <div\n            class=\"modal fade\"\n            id=\"exampleModal3\"\n            tabIndex=\"-1\"\n            aria-labelledby=\"exampleModalLabel\"\n            aria-hidden=\"true\"\n        >\n            <div\n                style={{ borderRadius: \"10px\", border: \"0\" }}\n                class=\"modal-dialog   modal-dialog-scrollable \"\n            >\n                <div\n                    class=\"modal-content container \"\n                    style={{\n                        background: \"#f5f5f5\",\n                    }}\n                >\n                    <div\n                        className=\"position-absolute\"\n                        style={{ right: \"30px\", top: \"20px\", zIndex: 2 }}\n                    >\n                        <button\n                            type=\"button\"\n                            class=\"close-btn btn\"\n                            data-bs-dismiss=\"modal\"\n                            ref={closeModalRef}\n                            aria-label=\"Close\"\n                            style={{ fontSize: \"20px\", boxShadow: \"none\" }}\n                        >\n                            <i class=\"bi bi-x-lg\"></i>\n                        </button>\n                    </div>\n\n                    <div class=\"modal-body my-4\">\n                        <div className=\"h3 pt-1\">{jobItem?.name}</div>\n                        {jobItem?.after_meeting == false ? (\n                            <div\n                                className=\"my-2\"\n                                style={{ fontSize: \"18px\", fontWeight: 500 }}\n                            >\n                                от{\" \"}\n                                <span style={{ fontSize: \"20px\" }}>\n                                    {jobItem?.min_salary}\n                                </span>{\" \"}\n                                до{\" \"}\n                                <span style={{ fontSize: \"20px\" }}>\n                                    {jobItem?.max_salary}\n                                </span>{\" \"}\n                                манат\n                            </div>\n                        ) : (\n                            <div\n                                className=\"my-2\"\n                                style={{ fontSize: \"18px\", fontWeight: 500 }}\n                            >\n                                После собеседования\n                            </div>\n                        )}\n\n                        <div\n                            className=\"text-gray my-3\"\n                            style={{ fontWeight: 500, fontSize: \"15px\" }}\n                        >\n                            <div className=\"my-2\">\n                                <strong>Требуемый опыт работы</strong>: От{\" \"}\n                                {jobItem?.min_experience} до{\" \"}\n                                {jobItem?.max_experience} лет\n                            </div>\n                            <div className=\"my-2\">\n                                {jobItem?.city},{\" \"}\n                                {getUpdatedTime(jobItem?.updated)} дней назад\n                            </div>\n\n                            <div className=\"my-2\">\n                                {jobItem?.work_time} часов работы,{\" \"}\n                                {jobItem?.profession?.name}{\" \"}\n                            </div>\n                        </div>\n                        <div className=\" my-2 py-2\">\n                            <div\n                                className=\"row my-2 fs-6\"\n                                style={{ fontWeight: 500 }}\n                            >\n                                <div className=\"col-auto ms-2 d-flex justify-content-center\">\n                                    <i className=\"bi bi-building fs-5\"></i>\n                                </div>\n                                <div\n                                    onClick={() =>\n                                        sendMe(\n                                            `/company/${jobCompany?.slug}/${jobCompany?.user}`\n                                        )\n                                    }\n                                    role=\"button\"\n                                    className=\"col text-blue text-decoration-underline\"\n                                >\n                                    {jobCompany?.full_name} (\n                                    {jobCompany?.company_type})\n                                </div>\n                            </div>\n                            <div className=\"row my-2  fs-6\">\n                                <div className=\"col-auto ms-2 d-flex justify-content-center\">\n                                    <i className=\"bi bi-geo-alt-fill fs-5\"></i>\n                                </div>\n                                <div className=\"col\">{jobCompany?.address}</div>\n                            </div>\n                            <div className=\"row my-2  fs-6\">\n                                <div className=\"col-auto ms-2 d-flex justify-content-center\">\n                                    <i class=\"bi bi-headset fs-5\"></i>\n                                </div>\n                                <div className=\"col\">\n                                    +{jobCompany?.phone_number}\n                                </div>\n                            </div>\n                        </div>\n\n                        <p className=\"my-4\" style={{ fontSize: \"15px\" }}>\n                            {jobItem?.description}\n                        </p>\n\n                        <div className=\"h6 \">О компании:</div>\n                        <p style={{ fontSize: \"15px\" }}>\n                            {jobCompany?.description}\n                        </p>\n                        <div className=\"h6 \">Мы ждём от кандидата:</div>\n                        <p style={{ fontSize: \"15px\" }}>{jobItem?.skills}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default JobModal;\n\n// {\n/* <div class=\"modal-header border-0 my-2 \">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n                            Job - {job?.name}\n                        </h5>\n                        <button\n                            type=\"button\"\n                            class=\"close-btn btn\"\n                            data-bs-dismiss=\"modal\"\n                            ref={closeModalRef}\n                            aria-label=\"Close\"\n                            style={{ fontSize: \"20px\", boxShadow: \"none\" }}\n                        >\n                            <i class=\"bi bi-x-lg\"></i>\n                        </button>\n                    </div> */\n// <div\n//     className=\"position-absolute\"\n//     style={{ right: \"0px\", top: \"0px\" }}\n// >\n//     <button\n//         type=\"button\"\n//         class=\"close-btn btn\"\n//         data-bs-dismiss=\"modal\"\n//         ref={closeModalRef}\n//         aria-label=\"Close\"\n//         style={{ fontSize: \"20px\", boxShadow: \"none\" }}\n//     >\n//         <i class=\"bi bi-x-lg\"></i>\n//     </button>\n// </div>\n// {isClicked ? (\n//     <div\n//         className=\"position-absolute fs-3 text-blue\"\n//         style={{ right: \"50px\", top: \"0px\" }}\n//         role=\"button\"\n//         onMouseEnter={() => setIsHovered(true)}\n//         onMouseLeave={() => setIsHovered(false)}\n//         onClick={() => setIsClicked(false)}\n//     >\n//         <i\n//             className={`bi bi-bookmark-check${\n//                 isHovered ? \"\" : \"-fill\"\n//             }`}\n//         ></i>\n//     </div>\n// ) : (\n//     <div\n//         className=\"position-absolute fs-3 text-blue\"\n//         style={{ right: \"50px\", top: \"0px\" }}\n//         role=\"button\"\n//         onMouseEnter={() => setIsHovered(true)}\n//         onMouseLeave={() => setIsHovered(false)}\n//         onClick={() => setIsClicked(true)}\n//     >\n//         <i\n//             className={`bi bi-bookmark-plus${\n//                 isHovered ? \"-fill\" : \"\"\n//             }`}\n//         ></i>\n//     </div>\n// )}\n// }\n\n// {\n//     {isClicked ? (\n//         <div\n//             className=\"position-absolute fs-3 text-blue\"\n//             style={{ right: \"80px\", top: \"20px\", zIndex: 2 }}\n//             role=\"button\"\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//             onClick={() => setIsClicked(false)}\n//         >\n//             <i\n//                 className={`bi bi-bookmark-check${\n//                     isHovered ? \"\" : \"-fill\"\n//                 }`}\n//             ></i>\n//         </div>\n//     ) : (\n//         <div\n//             className=\"position-absolute fs-3 text-blue\"\n//             style={{ right: \"80px\", top: \"20px\", zIndex: 2 }}\n//             role=\"button\"\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//             onClick={() => setIsClicked(true)}\n//         >\n//             <i\n//                 className={`bi bi-bookmark-plus${\n//                     isHovered ? \"-fill\" : \"\"\n//                 }`}\n//             ></i>\n//         </div>\n//     )}\n// }\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getUpdatedTime } from \"../../utils/convertDate\";\n\nfunction JobItem2({\n    name,\n    company,\n    min_salary,\n    max_salary,\n    after_meeting,\n    profession,\n    city,\n    updated,\n    clickFun,\n}) {\n    return (\n        <div className=\"px-4 px-md-3 my-2 \">\n            <div\n                className=\"row bg-white p-2 py-3 flex-wrap\"\n                style={{\n                    boxShadow: \"0px 4px 24px -10px rgba(124,124,124,0.88)\",\n                    borderRadius: \"10px\",\n                }}\n            >\n                <div className=\"col-auto d-flex align-items-center justify-content-center\">\n                    <div\n                        onClick={() => clickFun()}\n                        role=\"button\"\n                        style={{\n                            width: \"55px\",\n                            height: \"55px\",\n                            borderRadius: \"5px\",\n                            backgroundImage: `url(${\n                                process.env.PUBLIC_URL + company\n                                    ? company?.logo\n                                    : \"/images/logo.png\"\n                            })`,\n                        }}\n                        className=\"small-section\"\n                    ></div>\n                </div>\n                <div className=\"col d-flex flex-column\">\n                    <div\n                        onClick={() => clickFun()}\n                        role=\"button\"\n                        className=\"fs-6 truncate-overflow-1\"\n                        style={{ fontWeight: 500 }}\n                    >\n                        {name}\n                    </div>\n                    <Link\n                        to={`/company/${company?.slug}/${company?.id}`}\n                        className=\"truncate-overflow-1 text-blue text-decoration-none\"\n                        style={{\n                            fontSize: \"13px\",\n                            fontWeight: 500,\n                        }}\n                    >\n                        {company?.full_name}{\" \"}\n                    </Link>\n                    <Link\n                        to={`/jobs/${profession?.slug}/${profession.id}`}\n                        style={{\n                            fontSize: \"13px\",\n                            fontWeight: 500,\n                        }}\n                        className=\"truncate-overflow-1 text-decoration-none text-muted\"\n                    >\n                        {profession?.name}\n                    </Link>\n                </div>\n\n                <div className=\"col-12 mt-2 d-flex justify-content-between align-items-center\">\n                    <div className=\"mt-1 mb-1 fs-14\">\n                        <div>{city}, Туркменистан</div>\n                        <div className=\"text-muted\">\n                            {getUpdatedTime(updated)} дней назад\n                        </div>\n                    </div>\n                    <div className=\"h6 d-flex align-items-center flex-wrap justify-content-center mb-1 mt-2 mt-md-0\">\n                        {after_meeting == true ? (\n                            <span className=\"fs-14\">После собеседования</span>\n                        ) : (\n                            <>\n                                {min_salary} - {max_salary}\n                                <small className=\"ms-1\">TMT</small>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default JobItem2;\n","import React from \"react\";\nimport JobItem2 from \"./JobItem2\";\n\nfunction JobsMap({ jobs, setModalItem, setClickModalItem }) {\n    return (\n        <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3  \">\n            {Array.isArray(jobs) &&\n                jobs.length >= 1 &&\n                jobs.map((job) => {\n                    return (\n                        <JobItem2\n                            clickFun={() => {\n                                setModalItem(job);\n                                setClickModalItem(true);\n                            }}\n                            key={job.id}\n                            name={job.name}\n                            profession={job.profession}\n                            company={job.company}\n                            min_salary={job?.min_salary}\n                            max_salary={job?.max_salary}\n                            after_meeting={job?.after_meeting}\n                            city={job.city}\n                            updated={job.updated}\n                        />\n                    );\n                })}\n        </div>\n    );\n}\n\nexport default JobsMap;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FilterRow from \"../components/Form/JobFilterRow\";\nimport { get_profession, load_jobs } from \"../redux/actions/main\";\nimport { useParams } from \"react-router-dom\";\nimport { selectJobs } from \"../redux/selectors/main\";\nimport { getJobsConfig } from \"../utils/jobsConfig\";\nimport JobPagination from \"../components/Jobs/JobPagination\";\nimport JobModal from \"../components/Jobs/JobModal\";\nimport JobsMap from \"../components/Jobs/JobsMap\";\n\nconst mapState = (state) => ({\n    jobs: selectJobs(state),\n    next: state.main.next,\n    count: state.main.count,\n});\n\nfunction Jobs() {\n    // Data\n    const [filterData, setFilterData] = useState({\n        profession: null,\n        city: null,\n        company: null,\n        minSalary: null,\n        maxSalary: null,\n        date: null,\n        order: null,\n    });\n    // Data get Options\n    const [clickedSearchBtn, setClickSearch] = useState(false);\n    const [loadMore, setLoadMore] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { jobs, next, count } = useSelector(mapState);\n\n    // Url Profession\n    const [defaultProfession, setDefaultProfession] = useState(null);\n    const { job_slug, job_id } = useParams();\n    const dispatch = useDispatch();\n\n    // Modal\n    const openModalRef = React.createRef();\n    const closeModalRef = React.createRef();\n    const [modalItem, setModalItem] = useState(null);\n    const [clickedModalItem, setClickModalItem] = useState(false);\n\n    useEffect(() => {\n        if (modalItem && clickedModalItem) {\n            openModalRef.current.click();\n            setClickModalItem(false);\n        }\n    }, [clickedModalItem]);\n\n    // Get the data function\n    const loadJobsFun = () => {\n        setIsLoading(true);\n        // Getting search configs for backend\n        let config = getJobsConfig(filterData, loadMore);\n        if (loadMore) {\n            // If user wants next page\n            dispatch(load_jobs(config, jobs)).then((res) => {\n                setIsLoading(false);\n                setLoadMore(null);\n            });\n        } else {\n            dispatch(load_jobs(config)).then((res) => {\n                setIsLoading(false);\n            });\n        }\n    };\n\n    const hasDefaultProfession = () => {\n        // If it has profession in url, it gets this profession data\n        dispatch(get_profession(job_id)).then((res) => {\n            setDefaultProfession(res);\n            setFilterData({\n                ...filterData,\n                profession: job_id,\n            });\n            setClickSearch(true);\n        });\n    };\n\n    useEffect(() => {\n        // First display of this page, go to top\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\",\n        });\n        // Check if url has profession\n        if (job_id) {\n            hasDefaultProfession();\n        } else {\n            loadJobsFun();\n        }\n    }, [job_slug, job_id]);\n\n    useEffect(() => {\n        // If search btn clicked, get the data\n        if (clickedSearchBtn) {\n            setClickSearch(false);\n            loadJobsFun();\n        }\n    }, [filterData, clickedSearchBtn]);\n\n    useEffect(() => {\n        // If loadMore clicked, get the data\n        if (loadMore) {\n            loadJobsFun();\n        }\n    }, [loadMore]);\n\n    return (\n        <>\n            <JobModal job={modalItem} closeModalRef={closeModalRef} />\n            <div\n                ref={openModalRef}\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#exampleModal3\"\n            ></div>\n\n            <div className=\"container\">\n                <FilterRow\n                    isLoading={isLoading}\n                    setClickSearch={setClickSearch}\n                    filterData={filterData}\n                    setFilterData={setFilterData}\n                    defaultProfession={defaultProfession}\n                />\n                <div className=\"my-5\">\n                    <div className=\"h3 mb-4 text-center\">\n                        Работа {count ? <> - {count}</> : \" - 0\"}\n                    </div>\n                    <JobsMap\n                        jobs={jobs}\n                        setModalItem={setModalItem}\n                        setClickModalItem={setClickModalItem}\n                    />\n                    {next ? (\n                        <JobPagination\n                            jobsLength={jobs?.length}\n                            setLoadMore={setLoadMore}\n                            isLoading={isLoading}\n                        />\n                    ) : (\n                        \"\"\n                    )}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Jobs;\n","export default (date) => {\n    let convert = new Date(date);\n    var yyyy = convert.getFullYear().toString();\n    var mm = (convert.getMonth() + 1).toString();\n    var dd = convert.getDate().toString();\n\n    var mmChars = mm.split(\"\");\n    var ddChars = dd.split(\"\");\n    return (\n        yyyy +\n        \"-\" +\n        (mmChars[1] ? mm : \"0\" + mmChars[0]) +\n        \"-\" +\n        (ddChars[1] ? dd : \"0\" + ddChars[0])\n    );\n};\n\nexport const getUpdatedTime = (updated) => {\n    let today = new Date();\n    let release = new Date(updated);\n    const diffTime = Math.abs(today - release);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n};\n\nexport const getAge = (dateString) => {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n    }\n    return age;\n};\n","import {\n    LOAD_JOBS,\n    LOAD_MORE_JOBS,\n    LOAD_FREELANCERS,\n    LOAD_MORE_FREELANCERS,\n} from \"../types/types\";\n\nimport errors from \"./../messages/errors.json\";\nimport success from \"./../messages/success.json\";\nimport axios from \"axios\";\nimport { authConfig, config } from \"../utils/config\";\n\nexport const load_jobs = (conf, oldJobs) => async (dispatch) => {\n    // console.log(\"Loading jobs\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/jobs/?${conf}`,\n            config\n        );\n        if (Array.isArray(oldJobs)) {\n            dispatch({\n                type: LOAD_MORE_JOBS,\n                old_jobs: oldJobs,\n                new_jobs: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        } else {\n            dispatch({\n                type: LOAD_JOBS,\n                payload: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        }\n\n        return res.data.results;\n    } catch (error) {\n        return;\n        // console.log(\"Not authenticated\");\n    }\n};\nexport const load_freelancers = (conf, oldData) => async (dispatch) => {\n    console.log(\"Loading freelancers\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/freelancer/?${conf}`,\n            config\n        );\n        if (Array.isArray(oldData)) {\n            dispatch({\n                type: LOAD_MORE_FREELANCERS,\n                old_data: oldData,\n                new_data: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        } else {\n            dispatch({\n                type: LOAD_FREELANCERS,\n                payload: res.data.results,\n                next: res.data.next,\n                prev: res.data.prev,\n                count: res.data.count,\n            });\n        }\n\n        return res.data.results;\n    } catch (error) {\n        return error;\n        // console.log(\"Not authenticated\");\n    }\n};\n\nexport const get_profession = (id) => async (dispatch) => {\n    console.log(\"Loading profession\");\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/professions/${id}/`,\n            config\n        );\n\n        return res.data;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\n\nexport const search_professions = (searchValue) => async (dispatch) => {\n    console.log(\"Searching professions\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/professions/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\nexport const search_company = (searchValue) => async (dispatch) => {\n    console.log(\"Searching companies\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/search/company/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\nexport const search_freelancer = (searchValue) => async (dispatch) => {\n    console.log(\"Searching freelancers\", searchValue);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/search/freelancer/?search=${searchValue}`,\n            config\n        );\n        return res.data.results;\n    } catch (error) {\n        console.log(\"Not authenticated\");\n    }\n};\n\nexport const load_job = (pk) => async (dispatch) => {\n    console.log(\"Loading job\", pk);\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_VERSION_URL}/jobs/${pk}/`,\n            config\n        );\n        return res.data;\n    } catch (error) {\n        // console.log(\"Not authenticated\");\n    }\n};\nexport const post_job = (jobData, user) => async (dispatch) => {\n    console.log(\"Post job\", jobData, user);\n    if (localStorage.getItem(\"access\")) {\n        const body = JSON.stringify({\n            name: jobData.name,\n            profession: jobData.profession,\n            city: jobData.city,\n            min_salary: jobData.min_salary,\n            max_salary: jobData.max_salary,\n            after_meeting: jobData.after_meeting,\n            min_experience: jobData.min_experience,\n            max_experience: jobData.max_experience,\n            work_time: jobData.work_time,\n            skills: jobData.skills,\n            description: jobData.description,\n        });\n        const authConfig = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n                Accept: \"application/json\",\n            },\n        };\n        try {\n            const res = await axios.post(\n                `${process.env.REACT_APP_API_VERSION_URL}/jobs/`,\n                body,\n                authConfig\n            );\n            console.log(\"Sended\", res.data);\n            return res;\n        } catch (error) {\n            return error;\n        }\n    } else {\n        console.log(\"No access token\");\n    }\n};\n\nexport const retrieve_freelancer = (pk) => async (dispatch) => {\n    try {\n        const res = await axios.get(\n            `${process.env.REACT_APP_API_URL}/credentials/freelancer/${pk}/`,\n            config\n        );\n        return res.data;\n        // console.log.log(\"LOADED FREELANCER: \", res);\n    } catch (error) {\n        // console.log(\"Not authenticated\");\n    }\n};\n"],"sourceRoot":""}